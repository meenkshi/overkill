{%- liquid
  assign zoom_size = 5000
  assign min_aspect_ratio = 0.6

  assign current_variant = product.selected_or_first_available_variant
  assign featured_media = product.selected_or_first_available_variant.featured_media | default: product.featured_media

  unless product.has_only_default_variant
    for block in section.blocks
      if block.type == 'variant-picker' and block.settings.select_first_variant == false and product.variants.size > 1
        assign current_variant = product.selected_variant | default: false
        assign featured_media = product.featured_media
      endif
    endfor
  endunless

  assign product_form_id = 'product-form-' | append: section.id | append: '-' | append: product.id

  assign enable_media_grouping = false
  if section.settings.enable_media_grouping
    for variant in product.variants
      if variant.featured_media
        assign enable_media_grouping = true
        break
      endif
    endfor
  endif

  assign hide_buy_button = false

  for item in product.metafields.other.release_type.value
    if item == 'Instore'
      assign is_instore_only = true
      assign hide_buy_button = true
    endif
  endfor
  for block in section.blocks
    if block.type == 'release-countdown'
      assign now = 'now' | date: '%Y-%m-%dT%H:%M%z'
      assign release_end_date = now
      unless product.metafields.coming_soon.coming_soon_date.value == blank or is_instore_only == true
        assign release_end_date = product.metafields.coming_soon.coming_soon_date | date: '%Y-%m-%dT%H:%M%z'
      endunless
      if product.metafields.coming_soon.instore_date.value != blank
        assign instore_date = product.metafields.coming_soon.instore_date | date: '%Y-%m-%dT%H:%M%z'
      endif
    endif
    if block.type == 'raffle-submission'
      assign now = 'now' | date: '%Y-%m-%dT%H:%M%z'
      assign raffle_id = product.tags | where: 'CurrentRaffleId:' | first | remove: 'CurrentRaffleId:' | split: ':' | first
      assign raffle_metafield_key = 'id_' | append: raffle_id
      assign raffle_config = product.metafields.raffle[raffle_metafield_key].value
      assign raffle_status = raffle_config.status | upcase
      if raffle_status != 'PENDING' and raffle_id != blank and raffle_config != blank and raffle_config.end_date != blank
        assign is_raffle = true
        assign release_end_date = raffle_config.end_date | date: '%Y-%m-%dT%H:%M%z'
      endif
      if product.tags contains 'PreviousRaffle'
        assign is_raffle = true
        assign raffle_ended = true
      endif
    endif
  endfor
  for tag in product.tags
    if tag contains 'noguest' or tag contains 'NOGUEST'
      assign is_no_guest = true
      unless customer
        assign hide_buy_button = true
      endunless
    endif
  endfor
-%}

{%- if product.media.size > 1 -%}
  <script src="{{ 'slideshow.js' | asset_url }}" defer></script>
{%- endif -%}
<link rel="stylesheet" href="{{ 'modal.css' | asset_url }}">
<link rel="stylesheet" href="{{ 'pdp.css' | asset_url }}">

{% if section.settings.show_breadcrumbs %}
  <div class="container desktop-only not-in-quickbuy" data-cc-animate data-cc-animate-delay="0.2s">
    <div class="page-header">
      {% render 'breadcrumbs', show_next_prev: true %}
    </div>
  </div>
{% endif %}

<product-form class="js-product product-info quickbuy-content spaced-row container {%- if is_raffle %} is-raffle{%- endif -%}">
  <media-gallery
    class="media-gallery media-gallery--layout-{{ section.settings.gallery_layout }} media-gallery-size-{{ section.settings.gallery_size }} product-column-left {% if product.media.size > 1 %}has-thumbnails{% endif %}"
    data-cc-animate
    data-cc-animate-delay="0.2s"
    {%- if enable_media_grouping %}
      data-media-grouping-enabled
    {%- endif %}
    {%- if section.settings.enable_zoom %}
      data-zoom-enabled
    {%- endif %}
  >
    <div class="media-gallery__inner{% if section.settings.enable_sticky_columns %} sticky-content-container{% endif %}">
      {% render 'custom-product-labels', product: product %}
      <div class="main-image">
        {%- liquid
          for media in product.media
            if media.id == featured_media.id
              assign initial_slide = forloop.index0
              break
            endif
          endfor
        -%}

        <carousel-slider
          class="{% if section.settings.gallery_layout contains 'collage' or section.settings.gallery_layout contains 'columns' %}mobile-only{% endif %}"
          role="region"
          aria-roledescription="{{ 'sections.slideshow.carousel' | t }}"
          aria-label="{{ section.settings.accessibility_info | escape }}"
          data-dynamic-height="true"
          data-dispatch-events="true"
        >
          <div class="slider slider--no-scrollbar" id="slider-{{ section.id }}" aria-live="polite" aria-atomic="true">
            <div class="slider__grid">
              {%- for media in product.media -%}
                <div
                  class="slider__item{% if forloop.index0 == initial_slide %} is-active{% endif %}"
                  role="group"
                  aria-roledescription="{{ 'sections.slideshow.slide' | t }}"
                  aria-label="{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                  {%- unless forloop.index0 == initial_slide %}
                    tabindex="-1"
                  {% endunless %}
                  {%- if request.design_mode %}
                    data-index="{{ forloop.index0 }}"
                  {% endif %}
                  data-media-id="{{ media.id }}"
                >
                  {%- if media.media_type == 'image' and section.settings.enable_zoom -%}
                    <a
                      class="block show-gallery"
                      href="{{ media.preview_image | image_url: width: zoom_size }}"
                      aria-label="{{ 'products.product.media.load_image' | t: index: forloop.index }}"
                    >
                  {%- endif -%}

                  {%- liquid
                    if forloop.index0 == initial_slide
                      assign loading = 'eager'
                    else
                      assign loading = 'lazy'
                    endif

                    render 'media', media: media, product: product, min_aspect_ratio: min_aspect_ratio, loading: loading
                  -%}

                  {%- if media.media_type == 'image' and section.settings.enable_zoom -%}
                    </a>
                  {%- endif -%}
                </div>
              {%- endfor -%}
            </div>
          </div>

          {%- if product.media.size > 1 -%}
            <div class="slider-nav slider-nav--floating desktop-only js-only">
              <button
                type="button"
                class="slider-nav__btn slider-nav__btn--style-2 has-ltr-icon"
                name="prev"
                aria-controls="slider-{{ section.id }}"
              >
                <span class="visually-hidden">{{ 'general.slider.previous' | t }}</span>
                {% render 'icon-chevron-left' %}
              </button>

              <button
                type="button"
                class="slider-nav__btn slider-nav__btn--style-2 has-ltr-icon"
                name="next"
                aria-controls="slider-{{ section.id }}"
              >
                <span class="visually-hidden">{{ 'general.slider.next' | t }}</span>
                {% render 'icon-chevron-right' %}
              </button>
            </div>
          {%- endif -%}
        </carousel-slider>

        {%- if section.settings.gallery_layout contains 'collage'
          or section.settings.gallery_layout contains 'columns'
        -%}
          <div class="product-media-collage desktop-only">
            {%- for media in product.media -%}
              <div
                class="product-media-collage__item{% if forloop.index0 == initial_slide %} is-active{% endif %}"
                data-media-id="{{ media.id }}"
              >
                {%- if media.media_type == 'image' and section.settings.enable_zoom -%}
                  <a class="show-gallery" href="{{ media.preview_image | image_url: width: zoom_size }}">
                {%- endif -%}
                {%- liquid
                  if forloop.index < 4
                    assign loading = 'eager'
                  else
                    assign loading = 'lazy'
                  endif

                  render 'media', media: media, product: product, min_aspect_ratio: min_aspect_ratio, loading: loading, in_collage: true
                -%}
                {%- if media.media_type == 'image' and section.settings.enable_zoom -%}
                  </a>
                {%- endif -%}
              </div>
            {%- endfor -%}
          </div>
        {%- endif -%}

        {%- assign models = product.media | where: 'media_type', 'model' -%}
        {% if models.size > 0 %}
          <link
            rel="stylesheet"
            href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css"
            media="print"
            onload="this.media='all'"
          >
          <link rel="stylesheet" href="{{ 'model-viewer.css' | asset_url }}" media="print" onload="this.media='all'">
          <script src="{{ 'product-model.js' | asset_url }}" defer></script>

          <script type="application/json" id="product-json-models-{{ product.id }}">
            {{- product.media | where: 'media_type', 'model' | json -}}
          </script>

          <button
            class="view-in-space btn"
            data-shopify-xr
            data-shopify-model3d-id="{{ models.first.id }}"
            data-shopify-title="{{ product.title | escape }}"
            data-shopify-xr-hidden
          >
            {%- render 'icon-3d-badge-full-color' -%}
            <span class="view-in-space__text">{{ 'products.product.xr_button' | t }}</span>
          </button>
        {% endif %}
        {% render 'product-label-detail', product: product, current_variant: current_variant %}
      </div>

      {% if product.media.size > 1 %}
        <carousel-slider class="carousel block thumbnails{% unless section.settings.gallery_layout contains 'carousel' %} mobile-only{% endunless %}">
          <div class="slider slider--no-scrollbar">
            <ul class="slider__grid">
              {% for media in product.media %}
                <li
                  class="slider__item{% if forloop.index0 == initial_slide %} is-active{% endif %}"
                  data-media-id="{{ media.id }}"
                >
                  <a
                    class="thumbnail thumbnail--media-{{ media.media_type }}"
                    href="{% if section.settings.enable_zoom %}{{ media.preview_image | image_url: width: zoom_size }}{% else %}#{% endif %}"
                  >
                    {%- liquid
                      assign custom_aspect_ratio = media.preview_image.aspect_ratio | at_least: min_aspect_ratio
                      render 'image' with media.preview_image, sizes: '65px', widths: '65px, 130px', custom_aspect_ratio: custom_aspect_ratio, custom_crop: 'contain'
                    -%}

                    {%- if media.media_type == 'video' or media.media_type == 'external_video' -%}
                      <div class="thumbnail__badge">
                        {% render 'icon-video-badge-full-color' %}
                      </div>
                    {%- endif -%}
                    {%- if media.media_type == 'model' -%}
                      <div class="thumbnail__badge">
                        {% render 'icon-3d-badge-full-color' %}
                      </div>
                    {%- endif -%}
                  </a>
                </li>
              {% endfor %}
            </ul>
          </div>
        </carousel-slider>
      {% endif %}
    </div>

    {%- if section.settings.enable_zoom -%}
      {%- render 'gallery-viewer', product: product, zoom_size: zoom_size -%}
    {%- endif -%}

    {%- if enable_media_grouping -%}
      {%- liquid
        assign media_grouping_options = section.settings.media_grouping_option | replace: ', ', ',' | split: ','
        for option in product.options
          if media_grouping_options contains option
            assign groupOptionName = option
            assign groupOptionIndex = forloop.index0
            assign groupOptionProperty = 'option' | append: forloop.index
            assign sortedVariants = product.variants | sort: groupOptionProperty
            break
          endif
        endfor
        assign currentGroup = null
      -%}
      {%- if groupOptionName -%}
        <script class="js-data-variant-media" type="application/xml">
          {
            "groupOptionName": {{- groupOptionName | json -}},
            "groupOptionIndex": {{- groupOptionIndex }},
            "media": {
              {%- assign standardMediaFound = false -%}
              {%- for media in product.media -%}
                {%- liquid
                  for variant in sortedVariants
                    if variant.featured_media and variant.featured_media.id == media.id
                      assign currentGroup = variant.options[groupOptionIndex]
                    endif
                  endfor
                  unless media.alt contains 'all-groups'
                    assign standardMediaFound = true
                  endunless
                -%}
                {%- unless forloop.first -%},{%- endunless -%}
                "{{ media.id }}": {
                  {%- if media.alt contains 'all-groups' -%}
                    "group": true, "position": "{% if standardMediaFound %}end{% else %}start{% endif %}"
                  {%- else -%}
                    "group": {{ currentGroup | json }}
                  {%- endif -%}
                }
              {%- endfor -%}
            }
          }
        </script>
      {%- endif -%}
    {%- endif -%}
  </media-gallery>

  <div class="detail product-column-right" data-cc-animate data-cc-animate-delay="0.2s">
    <div
      class="product-form{% if section.settings.enable_sticky_columns %} sticky-content-container{% endif %}"
      data-ajax-add-to-cart="true"
      data-product-id="{{ product.id }}"
    >
      {% for block in section.blocks %}
        {% case block.type %}
          {% when 'stock_images' %}
            {% render 'stock_images', product: product %}

          {% when '@app' %}
            <div class="{% unless settings.qb_show_app_blocks %}not-in-quickbuy{% endunless %}">
              {% render block %}
            </div>

          {% when 'title' %}
            <div class="title-row" {{ block.shopify_attributes }}>
              <h1 class="product-title">
                {{ product.title | escape }}
                {% comment %}
                  {% if product.metafields.other.collaboration != blank %}
                        <div class='h2'>{{ product.metafields.other.collaboration }}</div>
                  {% endif %}
                {% endcomment %}
              </h1>
            </div>

          {% when 'price' %}
            <div class="price-container" {{ block.shopify_attributes }}>
              <div class="product-info__price product-price product-price--large">
                {% render 'price',
                  product: product,
                  show_currency_code: settings.product_currency_code_enabled,
                  for_variant_picker: true,
                  current_variant: current_variant
                %}
              </div>

              <div class="price-descriptors">
                {%- form 'product', product, class: 'js-instalments-form' -%}
                  <input type="hidden" name="id" value="{% if current_variant %}{{ current_variant.id }}{% endif %}">
                  {{ form | payment_terms }}
                {%- endform -%}

                {% assign is_gift_card = false %}
                {% for tag in product.tags %}
                  {% if tag == "Gift Card" %}
                    {% assign is_gift_card = true %}
                    {% break %}
                  {% endif %}
                {% endfor %}

                {%- if block.settings.show_tax_and_shipping -%}
                  {%- assign shipping_page = pages.shipping -%}
                  {%- if cart.taxes_included and is_gift_card == false or shipping_page.content != blank and is_gift_card == false -%}
                    <div class="product-policies">
                      {%- if cart.taxes_included -%}
                        {% assign iso_code = localization.country.iso_code | append: ':' %}
                        {% if settings.tax_display contains iso_code %}
                          {% assign tax_to_display = settings.tax_display
                            | split: iso_code
                            | last
                            | split: ','
                            | first
                          %}
                          {{ tax_to_display }}
                          {{ 'products.product.include_taxes' | t }}.
                        {% endif %}
                      {%- endif -%}

                      {%- if shipping_page.content != blank -%}
                        {{ 'products.product.shipping_policy_html' | t: link: shipping_page.url }}
                      {%- endif -%}
                    </div>
                  {%- endif -%}
                {%- endif -%}

                {% if section.settings.inventory_transfers_enable %}
                  <variant-content class="product-inventory-transfer">
                    {%- for variant in product.variants -%}
                      {%- if variant.incoming -%}
                        {%- liquid
                          if variant.next_incoming_date
                            assign date = variant.next_incoming_date | date: format: 'date'
                            if variant.available
                              assign incoming_html = 'products.transfers.will_not_ship_until' | t: date: date
                            else
                              assign incoming_html = 'products.transfers.will_be_in_stock_after' | t: date: date
                            endif
                          else
                            assign incoming_html = 'products.transfers.waiting_for_stock' | t
                          endif
                        -%}
                        <script type="text/template" data-variant="{{ variant.id }}">
                          {
                            {
                              incoming_html;
                            }
                          }
                        </script>

                        {%- if current_variant and variant.id == current_variant.id -%}{{ incoming_html }}{%- endif -%}
                      {%- endif -%}
                    {%- endfor -%}
                  </variant-content>
                {% endif %}
              </div>

              {%- if block.settings.enable_product_reviews_by_price
                and product.metafields.reviews.rating_count != blank
              -%}
                {%- assign rating_count = product.metafields.reviews.rating_count | plus: 0 -%}
                {%- if rating_count > 0 -%}
                  <div class="theme-product-reviews">
                    {% render 'rating', rating_value: product.metafields.reviews.rating.value %}
                    <span class="cc-rating-custom-caption">
                      {{- 'products.product.reviews_count' | t: count: rating_count -}}
                    </span>
                  </div>
                {%- endif -%}
              {%- endif -%}
            </div>

          {% when 'description' %}
            {%- if product.description != blank -%}
              <div
                class="{% unless block.settings.show_in_quickbuy %}not-in-quickbuy{% endunless %}{% if block.settings.show_in_tab %} product-info-accordion{% endif %}"
                {{ block.shopify_attributes }}
              >
                {% if block.settings.show_in_tab %}
                  <details-disclosure data-readmore='{{block.settings.show_read_more}}'>
                    <details
                      class="disclosure"
                      {% if block.settings.open_tab %}
                        open
                      {% endif %}
                    >
                      <summary class="disclosure__title">
                        {%- if block.settings.icon == blank -%}
                          {{- 'products.product.description' | t -}}
                        {%- else -%}
                          <div class="with-icon">
                            {% render 'icon', icon: block.settings.icon, size: 'small' %}
                            <span class="with-icon__beside">{{ 'products.product.description' | t }}</span>
                          </div>
                        {%- endif -%}
                      </summary>
                      <div class="disclosure__panel has-motion">
                        <div class="disclosure__content rte cf">
                          {{- product.description -}}
                          {% if block.settings.show_read_more %}
                              <read-more class='readmore subdued underline'>
                                <span class="more">{{ 'products.product.read_more' | t }}</span>
                                <span class="less">{{ 'products.product.show_less' | t }}</span>
                              </read-more>
                          {% endif %}
                        </div>
                      </div>
                    </details>
                  </details-disclosure>
                {% else %}
                  <product-description data-readmore='{{block.settings.show_read_more}}' class="product-description rte cf">
                    {%- if block.settings.icon == blank -%}
                      {{- product.description -}}
                    {%- else -%}
                      <div class="with-icon">
                        {% render 'icon', icon: block.settings.icon, size: 'small' %}
                        <span class="with-icon__beside">{{ product.description }}</span>
                      </div>
                    {%- endif -%}

                    {% if block.settings.show_read_more %}
                      <read-more class='readmore subdued underline'>
                        <span class="more">{{ 'products.product.read_more' | t }}</span>
                        <span class="less">{{ 'products.product.show_less' | t }}</span>
                      </read-more>
                  {% endif %}
                  </product-description>
                {% endif %}
              </div>
            {%- endif -%}

          {% when 'vendor' %}
            {%- liquid
              assign product_vendor_handle = product.vendor | handle
              if collections[product_vendor_handle].handle == product_vendor_handle
                assign vendor_url = collections[product_vendor_handle].url
              else
                assign vendor_url = product.vendor | url_for_vendor
              endif

              assign collection_url_handle = product.metafields.other.collaboration | handle

              if collections[collection_url_handle].handle == collection_url_handle
                assign collection_url = collections[collection_url_handle].url
              else
                assign splitted_handle = collection_url_handle | downcase | split: "-x-" | last
                if collections[splitted_handle].handle == splitted_handle
                assign collection_url = collections[splitted_handle].url
                else
                assign collection_url = product.vendor | url_for_vendor
                endif
              endif
            -%}

            <div class="vendor uppercase lightly-spaced-row" {{ block.shopify_attributes }}>
              {% comment %} <span class="product-info-label">{{ 'products.product.vendor' | t }}</span>  {% endcomment %}
              {% if product.metafields.other.collaboration %}
                {{ product.metafields.other.collaboration | link_to: collection_url, class: 'underline' }}
              {% else %}
                {{ product.vendor | link_to: vendor_url, class: 'underline' }}
              {% endif %}
            </div>

          {% when 'sku' %}
            <div
              class="product-sku"
              {% if current_variant == blank or current_variant.sku == blank %}
                hidden
              {% endif %}
              {{ block.shopify_attributes }}
            >
              <span class="product-info-label">{{ 'products.product.sku' | t }}</span>
              <span class="product-sku__value">
                {%- if current_variant %}{{ current_variant.sku }}{% endif -%}
              </span>
            </div>

          {% when 'barcode' %}
            <div
              class="product-barcode"
              {% if current_variant == blank or current_variant.barcode == blank %}
                hidden
              {% endif %}
              {{ block.shopify_attributes }}
            >
              <span class="product-info-label">{{ 'products.product.barcode' | t }}</span>
              <span class="product-barcode__value">
                {%- if current_variant %}{{ current_variant.barcode }}{% endif -%}
              </span>
            </div>

          {% when 'variant-picker' %}
            {%- unless release_end_date > now and is_raffle != true -%}
              {%- if raffle_ended != true -%}
                <div class="input-row" {{ block.shopify_attributes }}>
                  {%- capture size_chart_icon -%}{%- render 'icon', icon: 'ruler', size: 'small' -%}{%- endcapture -%}
                  {% render 'variant-picker',
                    product: product,
                    product_form_id: product_form_id,
                    block: block,
                    size_chart_icon: size_chart_icon,
                    media_ratio: 1,
                    swatch_crop: settings.swatch_crop_align,
                    dynamic_availability_mode: 'down'
                  %}
                </div>
              {%- endif -%}
            {%- endunless -%}

          {% when 'variant-picker-spray' %}
            <div class="input-row" {{ block.shopify_attributes }}>
              {% render 'variant-picker-spray',
                product: product,
                product_form_id: product_form_id,
                block: block,
                media_ratio: 1,
                swatch_crop: settings.swatch_crop_align,
                dynamic_availability_mode: 'down'
              %}
            </div>

          {% when 'buy-buttons' %}
            {%- unless release_end_date > now or raffle_ended == true -%}
              <buy-buttons class="buy-buttons-row block" {{ block.shopify_attributes }}>
                {% form 'product',
                  product,
                  id: product_form_id,
                  class: 'form js-product-form',
                  data-product-id: product.id
                %}
                  <input type="hidden" name="id" value="{{ current_variant.id }}" disabled>
                  {% if current_variant.compare_at_price %}
                    <input type="hidden" name="properties[_compare]" value="{{ current_variant.compare_at_price }}">
                  {% endif %}
                  {% if product.available %}
                    {%- liquid
                      assign gift_card_recipient_feature_active = false
                      if block.settings.show_gift_card_recipient and product.gift_card?
                        assign gift_card_recipient_feature_active = true
                      endif

                      assign enable_dynamic_payment_button = false
                      if block.settings.enable_payment_button and product.selling_plan_groups == empty and gift_card_recipient_feature_active == false
                        unless product.template_suffix contains 'preorder'
                          assign enable_dynamic_payment_button = true
                        endunless
                      endif
                    -%}

                    {% if gift_card_recipient_feature_active %}
                      {% render 'gift-card-recipient', section: section %}
                    {% endif %}

                    <div class="quantity-submit-row input-row {% if enable_dynamic_payment_button %}has-spb{% endif %}">
                      {% unless hide_buy_button %}
                        {% if block.settings.show_quantity_selector %}
                          {% if block.settings.select_quantity_selector == 'quantity_advanced' %}
                            {% render 'quantity-field', product: product, current_variant: current_variant %}
                          {% else %}
                            <label class="label" for="quantity">{{ 'products.product.quantity' | t }}</label>
                            <quantity-wrapper class="quantity-wrapper">
                              <a href="#" data-quantity="down" aria-label="{{ 'cart.items.decrease_quantity' | t }}">
                                {%- render 'icon-minus' -%}
                              </a>
                              <input
                                aria-label="{{ 'products.product.quantity' | t }}"
                                id="quantity"
                                type="number"
                                name="quantity"
                                value="1"
                              >
                              <a href="#" data-quantity="up" aria-label="{{ 'cart.items.increase_quantity' | t }}">
                                {%- render 'icon-plus' -%}
                              </a>
                            </quantity-wrapper>
                          {% endif %}
                        {% endif %}
                      {% endunless %}

                      <div class="quantity-submit-row__submit input-row">
                        <div class="js-form-error lightly-spaced-row" role="alert" hidden></div>

                        {%- capture add_to_cart_text -%}
                          {%- if product.template_suffix contains 'preorder' -%}
                            {{- 'products.product.preorder' | t -}}
                          {%- else -%}
                            {{- 'products.product.add_to_cart' | t -}}
                          {%- endif -%}
                        {%- endcapture -%}
                        {% if hide_buy_button == false %}
                          <button
                            class="btn btn--large add-to-cart"
                            type="submit"
                            name="add"
                            data-add-to-cart-text="{{ add_to_cart_text | escape }}"
                            {% if product.available == false %}
                              disabled
                            {% endif %}
                          >
                            {%- if current_variant.available or current_variant == false -%}
                              {{- add_to_cart_text -}}
                            {%- else -%}
                              {{- 'products.variant.no_stock' | t -}}
                            {%- endif -%}
                          </button>
                        {% elsif is_no_guest %}
                          <a
                            href="{{ routes.account_login_url }}?return_to={{ product.url }}"
                            class="btn btn--large instore-only"
                          >
                            {{- 'products.product.no_guest' | t -}}
                          </a>
                        {% else %}
                          <button class="btn btn--large instore-only" disabled>
                            {{- 'products.product.instore_only' | t -}}
                          </button>
                        {% endif %}
                      </div>
                      {% unless hide_buy_button %}
                        {% if enable_dynamic_payment_button %}
                          <script class="dynamic-payment-button-template" type="text/template">
                            {
                              {
                                form | payment_button;
                              }
                            }
                          </script>
                        {% endif %}
                      {% endunless %}

                      {% if block.settings.show_backorder_text %}
                        {% render 'backorder', product: product, variant: current_variant %}
                      {% endif %}
                    </div>

                  {% else %}
                    <div class="quantity-submit-row input-row">
                      <div class="quantity-submit-row__submit">
                        <button class="btn btn--large" name="add" type="submit" disabled>
                          {{- 'products.variant.no_stock' | t -}}
                        </button>
                      </div>
                    </div>
                  {% endif %}
                {% endform %}

                {%- if product.available and block.settings.show_pickup_availability -%}
                  {% render 'pickup-availability', current_variant: current_variant %}
                {%- endif -%}
              </buy-buttons>
            {%- endunless -%}

          {% when 'inventory-level' %}
            {%- unless release_end_date > now or raffle_ended != true -%}
              <div
                {% unless block.settings.show_in_quickbuy %}
                  class="not-in-quickbuy"
                {% endunless %}
                {{ block.shopify_attributes }}
              >
                {%- render 'product-inventory', product: product, current_variant: current_variant, block: block -%}
              </div>
            {%- endunless -%}

          {% when 'accordion' %}
            {%- liquid
              assign content = block.settings.content
              if block.settings.page != blank
                assign content = pages[block.settings.page].content
              endif
            -%}
            {%- if content != blank -%}
              <div
                class="product-info-accordion{% unless block.settings.show_in_quickbuy %} not-in-quickbuy{% endunless %}"
                {{ block.shopify_attributes }}
              >
                <details-disclosure>
                  <details
                    class="disclosure"
                    {% if block.settings.open %}
                      open
                    {% endif %}
                  >
                    <summary class="disclosure__title">
                      {%- if block.settings.icon == blank -%}
                        {{- block.settings.title | escape -}}
                      {%- else -%}
                        <div class="with-icon">
                          {% render 'icon', icon: block.settings.icon, size: 'small' %}
                          <span class="with-icon__beside">{{ block.settings.title | escape }}</span>
                        </div>
                      {%- endif -%}
                    </summary>
                    <div class="disclosure__panel has-motion">
                      <div class="disclosure__content rte cf">
                        {{- content -}}
                      </div>
                    </div>
                  </details>
                </details-disclosure>
              </div>
            {%- endif -%}

          {% when 'text' %}
            {% if block.settings.text != blank %}
              <div
                class="lightly-spaced-row{% unless block.settings.show_in_quickbuy %} not-in-quickbuy{% endunless %}"
                {{ block.shopify_attributes }}
              >
                {%- liquid
                  if block.settings.text_color != blank
                    assign text_col = block.settings.text_color | color_to_rgb | split: '(' | last | split: ')' | first
                  endif
                  if block.settings.enable_box
                    assign box_color_brightness = block.settings.box_color | color_brightness
                    if box_color_brightness > 128
                      assign box_color_saturation = block.settings.box_color | color_extract: 'saturation'
                      if box_color_saturation > 0
                        assign text_col = block.settings.box_color | color_darken: 60 | color_saturate: 30 | color_to_rgb | split: '(' | last | split: ')' | first
                      else
                        assign text_col = block.settings.box_color | color_darken: 60 | color_to_rgb | split: '(' | last | split: ')' | first
                      endif
                    else
                      assign text_col = '255,255,255'
                    endif
                  endif
                -%}
                <div
                  class="product-info-block{% if block.settings.icon != blank or block.settings.custom_icon != blank %} with-icon{% endif %}{% if block.settings.enable_box %} text-box{% endif %}{%- if block.settings.uppercase %} uppercase{%- endif -%}"
                  style="{% if block.settings.enable_box %}--box-color: {{ block.settings.box_color }};{% endif %}{% if text_col != blank %} --box-text-color: {{ text_col }};{% endif %} --text-size: {{ block.settings.font_size }};"
                >
                  {%- if block.settings.icon == blank and block.settings.custom_icon == blank -%}
                    {{- block.settings.text -}}
                  {%- else -%}
                    {% if block.settings.custom_icon == blank %}
                      {% render 'icon', icon: block.settings.icon, size: block.settings.icon_size %}
                    {% else %}
                      {%- liquid
                        if block.settings.icon_size == 'large'
                          assign icon_sizes = '38px'
                          assign icon_widths = '38, 76'
                        else
                          assign icon_sizes = '16px'
                          assign icon_widths = '16, 32'
                        endif
                      -%}
                      <span class="icon icon--image icon--{{ block.settings.icon_size }}">
                        {%- render 'image' with block.settings.custom_icon, sizes: icon_sizes, widths: icon_widths -%}
                      </span>
                    {% endif %}
                    <span class="with-icon__beside">{{ block.settings.text }}</span>
                  {%- endif -%}
                </div>
              </div>
            {% endif %}

          {% when 'richtext' %}
            {% if block.settings.richtext != blank %}
              <div
                class="lightly-spaced-row{% unless block.settings.show_in_quickbuy %} not-in-quickbuy{% endunless %}"
                {{ block.shopify_attributes }}
              >
                {%- liquid
                  if block.settings.enable_box
                    assign box_color_brightness = block.settings.box_color | color_brightness
                    if box_color_brightness > 128
                      assign box_color_saturation = block.settings.box_color | color_extract: 'saturation'
                      if box_color_saturation > 0
                        assign text_col = block.settings.box_color | color_darken: 60 | color_saturate: 30 | color_to_rgb | split: '(' | last | split: ')' | first
                      else
                        assign text_col = block.settings.box_color | color_darken: 60 | color_to_rgb | split: '(' | last | split: ')' | first
                      endif
                    else
                      assign text_col = '255,255,255'
                    endif
                  endif
                -%}
                <div
                  class="product-info-block{% if block.settings.icon != blank or block.settings.custom_icon != blank %} with-icon{% endif %}{% if block.settings.enable_box %} text-box{% endif %}"
                  {% if block.settings.enable_box %}
                    style="--box-color: {{ block.settings.box_color }}; --box-text-color: {{ text_col }}"
                  {% endif %}
                >
                  {%- if block.settings.icon == blank and block.settings.custom_icon == blank -%}
                    <div class="rte cf">{{ block.settings.richtext }}</div>
                  {%- else -%}
                    {% if block.settings.custom_icon == blank %}
                      {% render 'icon', icon: block.settings.icon, size: block.settings.icon_size %}
                    {% else %}
                      {%- liquid
                        if block.settings.icon_size == 'large'
                          assign icon_sizes = '38px'
                          assign icon_widths = '38, 76'
                        else
                          assign icon_sizes = '16px'
                          assign icon_widths = '16, 32'
                        endif
                      -%}
                      <span class="icon icon--image icon--{{ block.settings.icon_size }}">
                        {%- render 'image' with block.settings.custom_icon, sizes: icon_sizes, widths: icon_widths -%}
                      </span>
                    {% endif %}
                    <div class="with-icon__beside rte cf">{{ block.settings.richtext }}</div>
                  {%- endif -%}
                </div>
              </div>
            {% endif %}

          {% when 'pop-up' %}
            {% if block.settings.page != blank %}
              <div
                class="lightly-spaced-row{% unless block.settings.show_in_quickbuy %} not-in-quickbuy{% endunless %}"
                {{ block.shopify_attributes }}
              >
                <modal-opener class="no-js-hidden" data-modal="modal-{{ block.id }}">
                  <button
                    type="button"
                    class="{% if block.settings.style != 'link' %}btn btn--{{ block.settings.style }}{% else %}small-feature-link{% endif %}"
                    aria-haspopup="dialog"
                  >
                    {{- block.settings.text | escape -}}
                  </button>
                </modal-opener>
                <a href="{{ block.settings.page.url }}" class="link js-hidden">{{ block.settings.text | escape }}</a>
              </div>
            {% endif %}

          {% when 'link' %}
            {% if block.settings.text != blank %}
              <div
                class="lightly-spaced-row{% unless block.settings.show_in_quickbuy %} not-in-quickbuy{% endunless %}"
                {{ block.shopify_attributes }}
              >
                <a
                  class="{% if block.settings.style != 'link' %}btn btn--{{ block.settings.style }}{% else %}small-feature-link{% endif %}"
                  href="{{ block.settings.url }}"
                  {% if block.settings.open_in_new_tab %}
                    target="_blank"
                  {% endif %}
                >
                  {{- block.settings.text | escape -}}
                </a>
              </div>
            {% endif %}

          {% when 'image' %}
            {% if block.settings.image != blank %}
              <div
                class="lightly-spaced-row inline-width-container{% unless block.settings.show_in_quickbuy %} not-in-quickbuy{% endunless %}"
                style="width: {{ block.settings.image_width }}px"
                {{ block.shopify_attributes }}
              >
                {% if block.settings.url != blank -%}
                  <a
                    href="{{ block.settings.url }}"
                    {% if block.settings.open_in_new_tab %}
                      target="_blank"
                    {% endif %}
                  >
                {%- endif %}
                {%- assign image_max_width = block.settings.image_width | at_most: 490 -%}
                {%- capture image_sizes -%}(min-width: {{ image_max_width }}px) {{ image_max_width }}px, 100vw{%- endcapture -%}
                {%- liquid
                  assign image_widths = '320, 480, 580, 640, 700' | append: image_max_width | append: ', '
                  assign image_widths = image_max_width | times: 2 | append: 'px' | prepend: image_widths
                  render 'image' with block.settings.image, sizes: image_sizes, widths: image_widths
                -%}
                {% if block.settings.url != blank %}</a>{% endif %}
              </div>
            {% endif %}

          {% when 'custom-liquid' %}
            {% if block.settings.custom_liquid != blank %}
              <div
                class="lightly-spaced-row{% unless block.settings.show_in_quickbuy %} not-in-quickbuy{% endunless %}"
                {{ block.shopify_attributes }}
              >
                {{ block.settings.custom_liquid }}
              </div>
            {% endif %}

          {% when 'sharing' %}
            <div class="input-row not-in-quickbuy" {{ block.shopify_attributes }}>
              <div class="social-share flex items-center">
                <p class="social-share__heading">{{ 'general.social.share_heading' | t }}</p>
                {% render 'social-share',
                  share_twitter: block.settings.show_twitter,
                  share_facebook: block.settings.show_facebook,
                  share_pinterest: block.settings.show_pinterest,
                  share_title: product.title,
                  share_url: product.url,
                  share_image: product
                %}
              </div>
            </div>

          {% when 'divider' %}
            <hr
              {% unless block.settings.show_in_quickbuy %}
                class="not-in-quickbuy"
              {% endunless %}
              {{ block.shopify_attributes }}
            >

          {% when 'custom-option' %}
            {%- if block.settings.label != blank -%}
              {%- liquid
                assign custom_option_input_id = product_form_id | append: '-custom-' | append: forloop.index
                assign custom_input_name = block.settings.label | escape | prepend: 'properties[' | append: ']'
              -%}
              <div class="custom-option" {{ block.shopify_attributes }}>
                {% case block.settings.type %}
                  {% when 'text' %}
                    <div class="option-selector option-selector--custom">
                      <label class="label" for="{{ custom_option_input_id }}">
                        {{- block.settings.label | escape -}}
                      </label>
                      <input
                        class="custom-option__text-input"
                        type="text"
                        id="{{ custom_option_input_id }}"
                        form="{{ product_form_id }}"
                        name="{{ custom_input_name }}"
                        {% if block.settings.text_required %}
                          required
                        {% endif %}
                      >
                    </div>

                  {% when 'textarea' %}
                    <div class="option-selector option-selector--custom">
                      <label class="label" for="{{ custom_option_input_id }}">
                        {{- block.settings.label | escape -}}
                      </label>
                      <textarea
                        class="custom-option__text-input"
                        id="{{ custom_option_input_id }}"
                        form="{{ product_form_id }}"
                        name="{{ custom_input_name }}"
                        {% if block.settings.text_required %}
                          required
                        {% endif -%}
                      ></textarea>
                    </div>

                  {% when 'checkbox' %}
                    <div class="option-selector option-selector--custom">
                      <label class="label">
                        <input
                          type="hidden"
                          form="{{ product_form_id }}"
                          name="{{ custom_input_name }}"
                          value="{{ block.settings.checkbox_unchecked_value | escape }}"
                        >
                        <input
                          type="checkbox"
                          form="{{ product_form_id }}"
                          name="{{ custom_input_name }}"
                          value="{{ block.settings.checkbox_checked_value | escape }}"
                        >
                        <span class="label__text-beside-input">{{ block.settings.label | escape }}</span>
                      </label>
                    </div>

                  {% when 'multiple' %}
                    {%- assign custom_options = block.settings.multiple_options
                      | newline_to_br
                      | strip_newlines
                      | split: '<br />'
                    -%}

                    {% if block.settings.multiple_style == 'dropdown' %}
                      <div class="option-selector option-selector--custom" data-selector-type="dropdown">
                        <script src="{{ 'custom-select.js' | asset_url }}" defer></script>
                        {% render 'custom-select',
                          id: custom_option_input_id,
                          label: block.settings.label,
                          option_values: custom_options,
                          selected_value: custom_options.first,
                          include_native: true,
                          native_name: custom_input_name,
                          native_form_id: product_form_id
                        %}
                      </div>

                    {% else %}
                      <div class="option-selector option-selector--custom" data-selector-type="radio">
                        <fieldset>
                          <legend class="label">{{ block.settings.label | escape }}</legend>
                          {% for option in custom_options %}
                            <label class="label">
                              <input
                                type="radio"
                                form="{{ product_form_id }}"
                                name="{{ custom_input_name }}"
                                value="{{ option | escape }}"
                                {% if forloop.first %}
                                  checked
                                {% endif %}
                              >
                              <span class="label__text-beside-input">{{ option | escape }}</span>
                            </label>
                          {% endfor %}
                        </fieldset>
                      </div>
                    {% endif %}
                {% endcase %}
              </div>
            {%- endif -%}

          {% when 'related-products' %}
            {% if block.settings.product_list != blank %}
              <div
                class="lightly-spaced-row lightish-spaced-row-above not-in-quickbuy related-products"
                {{ block.shopify_attributes }}
              >
                <div class="label">{{ block.settings.title | escape }}</div>
                <div class="fixed-layout">
                  {%- liquid
                    if settings.prod_thumb_shape == 'portrait-23'
                      assign chosen_aspect_ratio = 0.67
                    elsif settings.prod_thumb_shape == 'portrait-45'
                      assign chosen_aspect_ratio = 0.8
                    elsif settings.prod_thumb_shape == 'square'
                      assign chosen_aspect_ratio = 1.0
                    elsif settings.prod_thumb_shape == 'landscape-54'
                      assign chosen_aspect_ratio = 1.25
                    elsif settings.prod_thumb_shape == 'landscape-32'
                      assign chosen_aspect_ratio = 1.50
                    elsif settings.prod_thumb_shape == 'tallest'
                      assign chosen_aspect_ratio = 99
                      for product in block.settings.product_list
                        if product.featured_media.preview_image.aspect_ratio < chosen_aspect_ratio
                          assign chosen_aspect_ratio = product.featured_media.preview_image.aspect_ratio
                        endif
                      endfor
                    else
                      assign chosen_aspect_ratio = 0
                      for product in block.settings.product_list
                        if product.featured_media.preview_image.aspect_ratio > chosen_aspect_ratio
                          assign chosen_aspect_ratio = product.featured_media.preview_image.aspect_ratio
                        endif
                      endfor
                    endif

                    echo '<div class="related-products__item related-products__item--selected column">'
                    echo product.featured_media | image_url: width: 300, height: 300 | image_tag
                    echo '</div>'

                    for related_product in block.settings.product_list
                      if related_product.available
                      echo '<a href="'
                      echo related_product.url
                      echo '" class="related-products__item column {{ }}">'
                      echo related_product.featured_media | image_url: width: 300, height: 300 | image_tag
                      echo '</a>'
                      endif
                    endfor
                  -%}
                </div>
              </div>
            {% endif %}

          {% when 'product_stock_display' %}
            {% assign location_names = 'products.product.pickup_availability.location_names' | t %}
            {% assign locations_loop = location_names | split: ',' %}
            {%- capture locations_json -%}
              {
                "locations": [
                  {%- for variant in product.variants -%}
                    {
                      {{- variant.id | append: "" | json -}}: 
                      {%- if variant.metafields.locationInventory.locations.value != blank -%}
                        {{- variant.metafields.locationInventory.locations.value | json -}}
                      {%- else -%}
                        null
                      {%- endif -%}
                    }{%- unless forloop.last -%},{%- endunless -%}
                  {%- endfor -%}
                ]
              }
              {%- endcapture -%}
              <legend class="label">{{ "products.product.store_available" | t}}</legend>
            <locations-grid data-locations='{{locations_json | strip }}' data-current='{{product.selected_or_first_available_variant.id}}' class="locations--grid">

            {% assign is_instore_only = false %}

              {%- liquid 
              for item in product.metafields.other.release_type.value
              if item == 'Instore'
                assign is_instore_only = true
              endif
            endfor
              -%}

              {% for location in locations_loop %}
                {% assign locations_loop = forloop.index %}
                <div class="locations--item">
                  {% assign location_display_name = location %}
                  {% assign location_identifier = location %}

                  {% if location contains ':' %}
                    {% assign location_identifier = location | split: ':' | first | strip %}
                    {% assign location_display_name = location | split: ':' | last %}
                  {% endif %}

                  {% assign image_block_url = 'image_' | append: forloop.index %}
                  {% assign image_object = block.settings[image_block_url] %}

                  {%  assign is_available_class = "unavailable" %}
                  {% assign current_locations = product.selected_or_first_available_variant.metafields.locationInventory.locations.value %}

                  {% for metafieldslocation in current_locations %}
                      {% if metafieldslocation == location_identifier %}
                        {%  assign is_available_class = "available" %}
                        {%break%}
                      {% endif %}
                  {% endfor %}
                  {% assign classes = "location--image " | append: is_available_class %}
                  {% if locations_loop == 1 and is_instore_only %}
                    {% assign classes = classes | append: " instore-only"%}
                  {% endif %}

                  {% if locations_loop == 1  %}
                    {% assign classes = classes | append: " online-availibility"%}
                  {% endif %}
                  {% if image_object != blank %}
                  {{ image_object | image_url: width: 150 | image_tag: class: classes, data-location: location_identifier }}
                  {% endif %}
                  <div class='location-name'>{{ location_display_name }}</div>
                  </div>
              {% endfor %}
            </locations-grid>

          {% when 'complementary' %}
            <cc-fetched-content
              class="not-in-quickbuy"
              data-id="{{ block.id }}"
              data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&intent=complementary"
              contains-product-blocks
              {{ block.shopify_attributes }}
            >
              {%- if recommendations.performed and recommendations.products_count > 0 -%}
                {%- liquid
                  if settings.prod_thumb_shape == 'portrait-23'
                    assign chosen_aspect_ratio = 0.67
                  elsif settings.prod_thumb_shape == 'portrait-45'
                    assign chosen_aspect_ratio = 0.8
                  elsif settings.prod_thumb_shape == 'square'
                    assign chosen_aspect_ratio = 1.0
                  elsif settings.prod_thumb_shape == 'landscape-54'
                    assign chosen_aspect_ratio = 1.25
                  elsif settings.prod_thumb_shape == 'landscape-32'
                    assign chosen_aspect_ratio = 1.50
                  elsif settings.prod_thumb_shape == 'tallest'
                    assign chosen_aspect_ratio = 99
                    for product in recommendations.products limit: block.settings.max_products
                      if product.featured_media.preview_image.aspect_ratio < chosen_aspect_ratio
                        assign chosen_aspect_ratio = product.featured_media.preview_image.aspect_ratio
                      endif
                    endfor
                  else
                    assign chosen_aspect_ratio = 0
                    for product in recommendations.products limit: block.settings.max_products
                      if product.featured_media.preview_image.aspect_ratio > chosen_aspect_ratio
                        assign chosen_aspect_ratio = product.featured_media.preview_image.aspect_ratio
                      endif
                    endfor
                  endif
                -%}

                <div class="lightly-spaced-row lightish-spaced-row-above not-in-quickbuy">
                  {% if block.settings.enable_carousel
                    and recommendations.products_count > 2
                    and block.settings.max_products > 2
                  %}
                    <carousel-slider class="carousel block collection-slider">
                      <div class="opposing-items opposing-items--valign-base very-lightly-spaced-row">
                        <div class="opposing-items__left label">{{ block.settings.heading | escape }}</div>
                        <div class="no-wrap slider-nav">
                          <button name="prev" class="slider-nav__btn has-ltr-icon text-current">
                            <span class="visually-hidden">{{ 'general.slider.previous' | t }}</span>
                            {% render 'icon-chevron-left' %}
                          </button>
                          <button name="next" class="slider-nav__btn has-ltr-icon text-current">
                            <span class="visually-hidden">{{ 'general.slider.next' | t }}</span>
                            {% render 'icon-chevron-right' %}
                          </button>
                        </div>
                      </div>
                      <div class="collection-listing slider slider--no-scrollbar">
                        <div class="product-grid product-grid--per-row-2 product-grid--per-row-mob-2 slider__grid product-grid--carousel">
                          {% for related_product in recommendations.products limit: block.settings.max_products %}
                            <div class="slider__item{% if forloop.first %} is-active{% endif %}">
                              {%- render 'product-block',
                                product: related_product,
                                no_quick_buy: true,
                                no_swiping: true,
                                custom_aspect_ratio: chosen_aspect_ratio,
                                grid: 5
                              -%}
                            </div>
                          {% endfor %}
                        </div>
                      </div>
                    </carousel-slider>
                  {% else %}
                    <div class="very-lightly-spaced-row">
                      <div class="label">{{ block.settings.heading | escape }}</div>
                    </div>
                    <div class="fixed-layout fixed-layout--no-wide-gutter">
                      {%- liquid
                        for related_product in recommendations.products limit: block.settings.max_products
                          echo '<div class="column column--half">'
                          render 'product-block', product: related_product, no_quick_buy: true, custom_aspect_ratio: chosen_aspect_ratio, grid: 5
                          echo '</div>'
                        endfor
                      -%}
                    </div>
                  {% endif %}
                </div>
              {%- endif -%}
            </cc-fetched-content>

          {% when 'product_metafield_details' %}
            {%- liquid
              assign content = block.settings.content
              if block.settings.page != blank
                assign content = pages[block.settings.page].content
              endif
            -%}

            <div
              class="product-info-accordion{% unless block.settings.show_in_quickbuy %} not-in-quickbuy{% endunless %}"
              {{ block.shopify_attributes }}
              data-id="{{block.id}}"
            >
              <style>
                .product-meta-data .product-meta-label {
                  font-weight: {{ block.settings.label_font_weight }};
                  text-transform: {{ block.settings.label_text_transform }};
                }

                .product-meta-data .product-meta-value {
                  font-weight: {{ block.settings.value_font_weight }};
                  text-transform: {{ block.settings.value_text_transform }};
                }
              </style>
              <details-disclosure>
                <details
                  class="disclosure product-meta-data"
                  {% if block.settings.product_details_collapsible_open_by_default %}
                    open
                  {% endif %}
                >
                  <summary class="disclosure__title">
                    {{ 'products.product.product_details' | t }}
                    {%- if block.settings.icon == blank -%}
                      {{- block.settings.title | escape -}}
                    {%- else -%}
                      <div class="with-icon">
                        {% render 'icon', icon: block.settings.icon, size: 'small' %}
                        <span class="with-icon__beside">{{ block.settings.title | escape }}</span>
                      </div>
                    {%- endif -%}
                  </summary>
                  <div class="disclosure__panel has-motion">
                    <div class="disclosure__content rte c">
                      {% comment %} Collaboration {% endcomment %}
                      {% if product.metafields.other.collaboration %}
                        <p>
                          <span class="product-meta-label">{{ 'products.product.collaboration' | t }}: </span
                          ><span class="product-meta-value">{{ product.metafields.other.collaboration.value }}</span>
                        </p>
                      {% endif %}
                      {% comment %} Color {% endcomment %}
                      {% comment %}
                        {% if product.metafields.custom.product_filter_color %}
                          <p><span class="product-meta-label">{{ 'products.product.color' | t }}: </span><span class="product-meta-value">{{ product.metafields.custom.product_filter_color.value }}</span></p>
                        {% endif %}
                      {% endcomment %}
                      {% comment %} Made for {% endcomment %}
                      {% if product.metafields.custom.product_filter_gender %}
                        <p>
                          <span class="product-meta-label">{{ 'products.product.manufacturedFor' | t }}: </span
                          ><span class="product-meta-value">
                            {%- for gender in product.metafields.custom.product_filter_gender.value %}
                              {% assign gender_downcase = gender | downcase %}
                              {%- assign translation = 'products.product.gender.' | append: gender_downcase | t -%}
                              {%- assign translation_downcase = translation | downcase -%}
                              {%- if translation_downcase contains 'translation missing' -%}
                                {{- gender -}}
                              {%- else -%}
                                {{- translation -}}
                              {%- endif -%}
                              {%- if forloop.last != true -%}, {% endif -%}
                            {% endfor -%}
                          </span>
                        </p>
                      {% endif %}
                      {% comment %} Release Type {% endcomment %}
                      {% comment %}
                        {% if product.metafields.other.release_type %}
                          <p><span class="product-meta-label">{{ 'products.product.releaseType' | t }}: </span><span class="product-meta-value">{% for location in product.metafields.other.release_type.value %}{{- location -}}{%- if forloop.last != true -%}, {%- endif -%}{% endfor %}</span></p>
                        {% endif %}
                      {% endcomment %}
                      {% comment %} Shipping info {% endcomment %}
                      {% if product.metafields.custom.shipping_info %}
                        <p>
                          <span class="product-meta-label">{{ 'products.product.shipping_info' | t }}: </span
                          ><span class="product-meta-value">
                            {%- for location in product.metafields.custom.shipping_info.value %}
                                {% assign tr_location = location | remove: "," | remove: " " %}
                                {%- assign translation = 'products.product.countries.' | append: tr_location | t -%}
                                {%- assign translation_downcase = translation | downcase -%}
                                {%- if translation_downcase contains 'translation missing' -%}
                                  {{- location -}}
                                {%- else -%}
                                  {{- translation -}}
                                {%- endif -%}
                                {%- if forloop.last != true -%},{%- endif -%}
                              {%- endfor -%}
                          </span>
                        </p>
                      {% endif %}
                      {% comment %} Country of Origin {% endcomment %}
                      {% if product.metafields.custom.country_of_origin %}
                        <p>
                          <span class="product-meta-label">{{ 'products.product.country_of_origin' | t }}: </span>
                          <span class="product-meta-value">
                            {%- for location in product.metafields.custom.country_of_origin.value -%}
                              {%- assign translation = 'products.product.countries.' | append: location | t -%}
                              {%- assign translation_downcase = translation | downcase -%}
                              {%- if translation_downcase contains 'translation missing' -%}
                                {{- location -}}
                              {%- else -%}
                                {{- translation -}}
                              {%- endif -%}
                              {%- if forloop.last != true -%},{%- endif -%}
                            {%- endfor -%}
                          </span>
                        </p>
                      {% endif %}
                      {% comment %} SKU {% endcomment %}
                      {% if product.selected_or_first_available_variant.sku %}
                        {% assign sku_without_vaitant = product.selected_or_first_available_variant.sku | split: '-' %}
                        <p>
                          <span class="product-meta-label">{{ 'products.product.sku' | t }}: </span
                          ><span class="product-meta-value">
                            {{ sku_without_vaitant[0] }}
                          </span>
                        </p>
                      {% endif %}
                      {% comment %} Manufacturer {% endcomment %}
                      {% if product.metafields.filter.manufacturer_sku %}
                        <p>
                          <span class="product-meta-label">{{ 'products.product.manufacturer' | t }}: </span
                          ><span class="product-meta-value">{{ product.metafields.filter.manufacturer_sku }}</span>
                        </p>
                      {% endif %}
                      {% comment %} Manufacturer Color {% endcomment %}
                      {% if block.settings.show_manufacturer_colour and product.metafields.other.manufacturer_colour != blank %}
                        <p>
                          <span class="product-meta-label">{{ 'products.product.manufacturer_color' | t }}: </span
                          ><span class="product-meta-value">{{ product.metafields.other.manufacturer_colour }}</span>
                        </p>
                      {% endif %}
                    </div>
                  </div>
                </details>
              </details-disclosure>
            </div>

            {%- if product.metafields.custom.product_material or product.metafields.filter.washcare_directions -%}
              <div
                class="product-info-accordion{% unless block.settings.show_in_quickbuy %} not-in-quickbuy{% endunless %}"
                {{ block.shopify_attributes }}
              >
                <details-disclosure>
                  <details
                    class="disclosure product-meta-data"
                    {% if block.settings.material_care_collapsible_open_by_default %}
                      open
                    {% endif %}
                  >
                    <summary class="disclosure__title">
                      {{ 'products.product.material_and_care' | t }}
                      {%- if block.settings.icon == blank -%}
                        {{- block.settings.title | escape -}}
                      {%- else -%}
                        <div class="with-icon">
                          {% render 'icon', icon: block.settings.icon, size: 'small' %}
                          <span class="with-icon__beside">{{ block.settings.title | escape }}</span>
                        </div>
                      {%- endif -%}
                    </summary>
                    <div class="disclosure__panel has-motion">
                      <div class="disclosure__content rte cf">
                        {% comment %} Material {% endcomment %}
                        {% if product.metafields.custom.product_material %}
                          <div>
                            <p class="product-meta-label">{{ 'products.product.material' | t }}:</p>
                            {% assign materials = product.metafields.custom.product_material | split: '-' %}
                            {% if materials.size == 1 %}
                              <div class="product-meta-value">{{ materials[0] | strip }}</div>
                            {% elsif materials.size > 1 %}
                              <ul>
                                {% for material in materials %}
                                  <li class="product-meta-value">{{ material | strip }}</li>
                                {% endfor %}
                              </ul>
                            {% endif %}
                          </div>
                        {% endif %}
                        {% comment %} Washcare {% endcomment %}
                        {% if product.metafields.filter.washcare_directions %}
                          <p>
                            <span class="product-meta-label">{{ 'products.product.washcare' | t }}: </span
                            ><span class="product-meta-value">{{ product.metafields.filter.washcare_directions }}</span>
                          </p>
                        {% endif %}
                      </div>
                    </div>
                  </details>
                </details-disclosure>
              </div>
            {%- endif -%}

            {%- if product.metafields.other.height
              or product.metafields.other.length
              or product.metafields.other.width
              or product.metafields.custom.fitting_listing
            -%}
              <div
                class="product-info-accordion{% unless block.settings.show_in_quickbuy %} not-in-quickbuy{% endunless %}"
                {{ block.shopify_attributes }}
              >
                <details-disclosure>
                  <details
                    class="disclosure product-meta-data"
                    {% if block.settings.fit_collapsible_open_by_default %}
                      open
                    {% endif %}
                  >
                    <summary class="disclosure__title">
                      {{ 'products.product.size_and_fit' | t }}
                      {%- if block.settings.icon == blank -%}
                        {{- block.settings.title | escape -}}
                      {%- else -%}
                        <div class="with-icon">
                          {% render 'icon', icon: block.settings.icon, size: 'small' %}
                          <span class="with-icon__beside">{{ block.settings.title | escape }}</span>
                        </div>
                      {%- endif -%}
                    </summary>
                    <div class="disclosure__panel has-motion">
                      <div class="disclosure__content rte cf">
                        {% if product.metafields.other.height
                          or product.metafields.other.length
                          or product.metafields.other.width
                        %}
                          <p>
                            <span class="product-meta-label">{{ 'products.product.dimensions' | t }}:</span>
                          </p>
                          <ul>
                            {% comment %} Height {% endcomment %}
                            {% if product.metafields.other.height %}
                              <li>
                                {{ 'products.product.height' | t }}:
                                <span class="product-meta-value">
                                  {{- product.metafields.other.height | append: 'cm' -}}
                                </span>
                              </li>
                            {% endif %}
                            {% comment %} Length {% endcomment %}
                            {% if product.metafields.other.length %}
                              <li>
                                {{ 'products.product.length' | t }}:
                                <span class="product-meta-value">
                                  {{- product.metafields.other.length | append: 'cm' -}}
                                </span>
                              </li>
                            {% endif %}
                            {% comment %} Width {% endcomment %}
                            {% if product.metafields.other.width %}
                              <li>
                                {{ 'products.product.width' | t }}:
                                <span class="product-meta-value">
                                  {{- product.metafields.other.width | append: 'cm' -}}
                                </span>
                              </li>
                            {% endif %}
                          </ul>
                        {%- endif %}
                        {% if product.metafields.custom.fitting_listing %}
                          <p>
                            <span class="product-meta-label">{{ 'products.product.fit' | t }}:</span>
                            {% for fitting_item in product.metafields.custom.fitting_listing.value %}
                              {% assign fitting_handleized = fitting_item | handleize | replace: '-', '_' %}

                              {% assign fitting_prefix = "products.filtering.fitting_sizes." | append: fitting_handleized | t %}
                              {% assign fitting_prefix_downcase = fitting_prefix |  downcase %}
                              <span class="product-meta-value">
                                {% if fitting_prefix_downcase contains "translation missing" %}
                                  {{- fitting_item -}}
                                  {% else %}
                                  {{ fitting_prefix }}
                                {% endif %}
                              </span>
                              {%- if forloop.last != true -%},{%- endif -%}
                            {% endfor %}
                          </p>
                        {% endif %}
                      </div>
                    </div>
                  </details>
                </details-disclosure>
              </div>
            {%- endif -%}

          {% when 'countdown' %}
            <div
              class="lightly-spaced-row{% unless block.settings.show_in_quickbuy %} not-in-quickbuy{% endunless %}"
              {{ block.shopify_attributes }}
            >
              {%- liquid
                assign hide_on_end = block.settings.hide_on_end | default: false
                if block.settings.end_date != blank
                  if block.settings.end_time != blank
                    assign end_date = block.settings.end_date | append: 'T' | append: block.settings.end_time
                  endif
                  assign end_date = end_date | date: '%Y-%m-%dT%H:%M%z'
                else
                  assign now_split = now | split: 'T'
                  assign end_date = now_split.first | append: 'T23:59%z' | date: '%Y-%m-%dT%H:%M%z'
                endif
              -%}
              {%- if end_date > now or hide_on_end == false -%}
                <script src="{{ 'countdown-timer.js' | asset_url }}" defer></script>
                <div
                  class="product-info-block text-box text-box--block align-center countdown-font-{{ block.settings.number_font }} countdown-divider-{{ block.settings.divider_type }}"
                  style="--box-color: {{ block.settings.box_color }}; --box-text-color: {{ block.settings.text_color | color_to_rgb | split: '(' | last | split: ')' | first }}"
                >
                  {%- if block.settings.heading != blank -%}
                    <div class="very-lightly-spaced-row">{{ block.settings.heading }}</div>
                  {%- endif -%}
                  {% render 'countdown-timer',
                    end_date: block.settings.end_date,
                    end_time: block.settings.end_time,
                    end_text: block.settings.end_text,
                    end_midnight: true,
                    hide_on_end: block.settings.hide_on_end,
                    show_labels: block.settings.show_timer_labels
                  %}
                </div>
              {%- endif -%}
            </div>

          {% when 'release-countdown' %}
            <div
              class="lightly-spaced-row{% unless block.settings.show_in_quickbuy %} not-in-quickbuy{% endunless %}"
              {{ block.shopify_attributes }}
            >
              {%- if release_end_date > now or instore_date > now -%}
                <div
                  class="product-info-block text-box text-box--block align-center countdown-font-{{ block.settings.number_font }} countdown-divider-{{ block.settings.divider_type }}"
                  style="--box-color: {{ block.settings.box_color }}; --box-text-color: {{ block.settings.text_color | color_to_rgb | split: '(' | last | split: ')' | first }}"
                >
                  {% assign timezone_translation_key = 'products.product.timezones.' %}
                  {%- unless raffle_id -%}
                    {%- if product.metafields.other.release_type.value contains 'Instore & Online' and instore_date != blank and instore_date != release_end_date -%}
                      {%- if instore_date > now -%}
                        <div class="mb-2 uppercase font-bold">
                          <div>Instore Release:</div>
                          {% assign timezone = product.metafields.coming_soon.instore_date | date: '%Z' %}
                          <div>
                            {{ product.metafields.coming_soon.instore_date.value | date: '%d.%m.%Y | %H:%M' }}
                            {{ timezone_translation_key | append: timezone | t }}
                          </div>
                        </div>
                      {%- endif -%}
                      {%- if release_end_date > now -%}
                        <div class="mb-8 uppercase font-bold">
                          <div>Online Release:</div>
                          {% assign timezone = product.metafields.coming_soon.coming_soon_date | date: '%Z' %}
                          <div>
                            {{ product.metafields.coming_soon.coming_soon_date.value | date: '%d.%m.%Y | %H:%M' }}
                            {{ timezone_translation_key | append: timezone | t }}
                          </div>
                        </div>
                      {%- endif -%}
                    {%- else -%}
                      <div class="mb-8 uppercase font-bold">
                        <div>{{ product.metafields.other.release_type.value }} Release:</div>
                        {%- if product.metafields.other.release_type.value contains 'Instore' and instore_date != release_end_date -%}
                          {% assign timezone = product.metafields.coming_soon.instore_date | date: '%Z' %}
                          <div>
                            {{ product.metafields.coming_soon.instore_date.value | date: '%d.%m.%Y | %H:%M' }}
                            {{ timezone_translation_key | append: timezone | t }}
                          </div>
                        {%- else -%}
                          {% assign timezone = product.metafields.coming_soon.coming_soon_date | date: '%Z' %}
                          <div>
                            {{ product.metafields.coming_soon.coming_soon_date.value | date: '%d.%m.%Y | %H:%M' }}
                            {{ timezone_translation_key | append: timezone | t }}
                          </div>
                        {%- endif -%}
                      </div>
                    {%- endif -%}
                  {%- else -%}
                    <div class="mb-8 uppercase font-bold">
                      <div>{{ 'products.product.raffle_release' | t }}:</div>
                      {% assign timezone = raffle_config.end_date | date: '%Z' %}
                      <div class="subdued">
                        {{ raffle_config.end_date | date: '%d.%m.%Y | %H:%M' }}
                        {{ timezone_translation_key | append: timezone | t }}
                      </div>
                    </div>
                  {%- endunless -%}
                  {%- if release_end_date > now -%}
                    <script src="{{ 'countdown-timer.js' | asset_url }}" defer></script>
                    {% render 'countdown-timer',
                      end_date: release_end_date,
                      end_midnight: false,
                      hide_on_end: block.settings.hide_on_end,
                      show_labels: block.settings.show_timer_labels,
                      render_section_on_end: section.id
                    %}
                  {%- endif -%}
                </div>
              {%- endif -%}
              {%- if raffle_ended == true -%}
                <div
                  class="product-info-block text-box text-box--block align-center countdown-font-{{ block.settings.number_font }} countdown-divider-{{ block.settings.divider_type }}"
                  style="--box-color: {{ block.settings.box_color }}; --box-text-color: {{ block.settings.text_color | color_to_rgb | split: '(' | last | split: ')' | first }}"
                >
                  <div class="very-lightly-spaced-row">
                    <div class="font-bold uppercase">{{ 'products.product.raffle_ended' | t }}</div>
                    <div class="font-bold uppercase subdued">
                      {{ raffle_config.end_date | date: '%d.%m.%Y | %H:%M' }}
                      {{ raffle_config.end_date | date: '%Z' }}
                    </div>
                  </div>
                </div>
              {%- endif -%}
            </div>

          {% when 'raffle-submission' %}
            {%- if is_raffle == true and raffle_ended != true -%}
              {%- if release_end_date > now -%}
                <script src="{{ 'raffle-submission.js' | asset_url }}" defer></script>
                <style type="text/css">
                  raffle-submission .form.raffle-submission {
                    border: 4px solid #dadada;
                    padding: 2rem;
                  }

                  raffle-submission .form.raffle-submission .checkbox-label {
                    align-items: baseline;
                    gap: 1rem;
                    --checkbox-size: 1.125rem;
                  }

                  raffle-submission .form.raffle-submission .checkbox-label input {
                    position: absolute;
                    width: 0.1rem;
                    height: 0.1rem;
                    margin: -0.1rem;
                    padding: 0;
                    overflow: hidden;
                    clip: rect(0, 0, 0, 0);
                    border: 0;
                  }

                  raffle-submission .form.raffle-submission .checkbox-label > * {
                    text-align: left;
                  }

                  raffle-submission .form.raffle-submission .checkbox-label > .checkbox-label__label {
                    display: inline-flex;
                    position: relative;
                    justify-content: space-between;
                    padding-inline-start: 28px;
                  }

                  raffle-submission .form.raffle-submission .checkbox-label > .checkbox-label__label:before {
                    content: '';
                    position: absolute;
                    top: calc(var(--base-line-height) * 0.5em);
                    left: 0;
                    width: calc(var(--checkbox-size) - 2px);
                    height: calc(var(--checkbox-size) - 2px);
                    margin-top: calc(-1 * ((var(--checkbox-size) / 2) - 1px));
                    border: 1px solid currentColor;
                  }

                  raffle-submission
                    .form.raffle-submission
                    .checkbox-label
                    input:checked
                    + .checkbox-label__label:before {
                    background: currentColor;
                  }

                  raffle-submission .form.raffle-submission .checkbox-label > .checkbox-label__label .tick {
                    position: absolute;
                    top: calc(var(--base-line-height) * 0.5em);
                    left: -1px;
                    width: var(--checkbox-size);
                    height: var(--checkbox-size);
                    margin-top: calc(-1 * (var(--checkbox-size) / 2));
                    fill: rgb(var(--body-bg-color));
                    transform: scale(0);
                    transition: transform 0.1s ease;
                  }

                  raffle-submission
                    .form.raffle-submission
                    .checkbox-label
                    input:checked
                    + .checkbox-label__label
                    .tick {
                    transform: scale(1);
                  }

                  raffle-submission .form.raffle-submission .checkbox-label div {
                    text-align: left;
                  }

                  raffle-submission .form.raffle-submission .quantity-submit-row__submit {
                    margin-bottom: 0;
                    text-align: center;
                  }

                  raffle-submission .form.raffle-submission .btn[disabled] {
                    background-color: #dadada;
                    border-color: #dadada;
                    color: #000;
                  }

                  raffle-submission a {
                    text-decoration: underline;
                    text-underline-offset: 2px;
                    text-decoration-color: rgb(var(--link-color) / 0.4);
                    text-decoration-thickness: 1px;
                  }

                  .product-form raffle-submission p {
                    text-align: left;
                  }
                </style>
                {% if customer %}
                  {%- capture config -%}
                    [
                      {%- for variant in product.variants -%}
                        {%- assign _token = 0 -%}
                        {%- assign id_chars = variant.id | append: customer.id | append: raffle_id | split: "" -%}
                        {%- for char in id_chars -%}
                            {%- assign _token = _token | plus: char | times: 677 -%}
                            {%- assign _token = _token | modulo: 16777216 -%}
                        {%- endfor -%}
                        {
                          "id": {{ variant.id | json -}},
                          "token": {{ _token | json -}}
                        }
                        {%- unless forloop.last -%},{%- endunless -%}
                      {%- endfor -%}
                    ]
                  {%- endcapture -%}
                  {%- assign _token = 0 -%}
                  {%- assign id_chars = current_variant.id | append: customer.id | append: raffle_id | split: '' -%}
                  {%- for char in id_chars -%}
                    {%- assign _token = _token | plus: char | times: 677 -%}
                    {%- assign _token = _token | modulo: 16777216 -%}
                  {%- endfor -%}
                  {%- assign already_participated = false -%}
                  {%- if customer.metafields.raffle.previous_raffle_ids.value contains raffle_id -%}
                    {%- assign already_participated = true -%}
                  {%- endif -%}
                {%- endif -%}
                <raffle-submission
                  data-current-variant-id="{{ current_variant.id }}"
                  data-variants="{{ config | strip_newlines | strip | escape }}"
                >
                  <p>{{ 'products.product.raffle_disclaimer_html' | t }}</p>
                  {% form 'product',
                    product,
                    id: product_form_id,
                    class: 'form js-product-form raffle-submission',
                    data-product-id: product.id
                  %}
                    <input type="hidden" name="id" value="{{ current_variant.id }}" disabled>
                    <input type="hidden" name="properties[_raffle]" value="{{ _token }}">
                    <input type="hidden" name="properties[_raffle_customer_id]" value="{{ customer.id }}">
                    <input type="hidden" name="properties[_raffle_id]" value="{{ raffle_id }}">
                    {%- unless already_participated -%}
                      <label class="checkbox-label">
                        <input type="checkbox" id="accept-terms" name="accept-terms">
                        <div class="checkbox-label__label">
                          <div>{{ 'products.product.raffle_terms_html' | t }}</div>
                          <svg class="tick" role="presentation" viewBox="0 0 20 20">
                            <path d="M8.315 13.859l-3.182-3.417a.506.506 0 0 1 0-.684l.643-.683a.437.437 0 0 1 .642 0l2.22 2.393 4.942-5.327a.436.436 0 0 1 .643 0l.643.684a.504.504 0 0 1 0 .683l-5.91 6.35a.437.437 0 0 1-.642 0"></path>
                          </svg>
                        </div>
                      </label>
                    {%- endunless -%}
                    {%- if already_participated -%}
                      <button
                        class="btn btn--large"
                        type="button"
                        name="add"
                        data-add-to-cart-text="{{ 'products.product.raffle_already_participated' | t | escape }}"
                        disabled
                      >
                        {{ 'products.product.raffle_already_participated' | t }}
                      </button>
                    {%- else -%}
                      <div class="quantity-submit-row__submit input-row">
                        <div class="js-form-error lightly-spaced-row" role="alert" hidden></div>
                        {%- if customer -%}
                          <button
                            class="btn btn--large"
                            type="button"
                            name="add"
                            data-add-to-cart-text="{{ 'products.product.raffle_add_to_cart' | t | escape }}"
                            disabled
                          >
                            {{- 'products.product.raffle_add_to_cart' | t -}}
                          </button>
                        {%- else -%}
                          <a class="btn btn--large" href="{{ routes.account_login_url }}?return_to={{ product.url }}">
                            {{- 'products.product.raffle_login' | t -}}
                          </a>
                        {%- endif -%}
                      </div>
                    {%- endif -%}
                  {% endform %}
                </raffle-submission>
              {%- endif -%}
            {%- endif -%}

          {% when 'feature-rating' %}
            <link rel="stylesheet" href="{{ 'feature-rating.css' | asset_url }}">
            <div
              class="input-row{% unless block.settings.show_in_quickbuy %} not-in-quickbuy{% endunless %}"
              {{ block.shopify_attributes }}
            >
              {%- if block.settings.heading != blank -%}
                <div class="lightly-spaced-row">
                  <strong role="heading" aria-level="2">{{ block.settings.heading }}</strong>
                </div>
              {%- endif -%}

              {% render 'feature-rating',
                segments: block.settings.segments,
                active_segment: block.settings.active_segment,
                fill_segments: block.settings.fill_segments,
                show_labels: block.settings.show_labels,
                label_left: block.settings.label_left,
                label_middle: block.settings.label_middle,
                label_right: block.settings.label_right
              %}
            </div>

          {% when 'manufacturer-color' %}
            {%- if product.metafields.custom.product_filter_color.value != blank -%}
              <div class="manufacturer-color uppercase">
                <span class="font-semibold">{{ 'products.product.color' | t }}: </span>
                {%- for color in product.metafields.custom.product_filter_color.value -%}
                  {%- assign translate_string = "products.filtering.product_filter_color." | append: color | downcase -%}
                  {%- if translate_string contains "translation missing" -%}
                      {{- color -}}
                  {%- else -%}
                    {{- translate_string | t -}}
                  {%- endif -%}
              {%- unless forloop.last %}, {% endunless -%}
                {%- endfor  -%}
              </div>
            {%- endif -%}
        {% endcase %}
      {% endfor %}

      <div class="lightish-spaced-row-above only-in-quickbuy">
        <a class="more" href="{{ product.url }}">
          <span class="beside-svg underline">{{ 'products.product.view_details' | t }}</span>
          <span class="icon--small icon-natcol has-ltr-icon">{% render 'icon-chevron-right' %}</span>
        </a>
      </div>
    </div>
  </div>

  {%- render 'product-popups', product: product -%}

  {%- render 'structured-data-product',
    product: product,
    current_variant: product.selected_or_first_available_variant
  -%}
</product-form>

{% if section.settings.show_location_underneath %}
  <div class="product-description rte container cf padded-row not-in-quickbuy">{{ product.description }}</div>
{% endif %}

{% assign product_vendor = product.vendor | downcase %}
{% if product_vendor contains "adidas" %}
  <script type="text/javascript">
      (function() { var s=document.createElement('script');
      s.async=true;s.className='demoup_stage1_script';
      s.src='//static.demoup.com/api/stages/11236/stage1.js?url='+encodeURI(document.URL);
      var m=document.getElementsByTagName('head')[0];m.parentNode.insertBefore(s, m);})();
    </script>
    <script
      async
      id='demoup_stage2_script'
      src='//static.demoup.com/overkillshop.com/stage2.min.js'></script>
{% endif %}

{% schema %}
{
  "name": "Product pages",
  "class": "section-main-product page-section-spacing page-section-spacing--no-top-mobile",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_breadcrumbs",
      "label": "Show breadcrumbs",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_location_underneath",
      "label": "Show description below media",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "inventory_transfers_enable",
      "label": "Show inventory transfer notice",
      "info": "Shows under price. Learn how to create inventory transfers [here](https://help.shopify.com/en/manual/products/inventory/transfers/create-transfer)",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_columns",
      "label": "Enable stick on scroll",
      "default": false
    },
    {
      "type": "header",
      "content": "Media"
    },
    {
      "type": "paragraph",
      "content": "Learn more about [media types](https://help.shopify.com/en/manual/products/product-media)"
    },
    {
      "type": "select",
      "id": "gallery_size",
      "label": "Size",
      "options": [
        {
          "value": "small",
          "label": "Small"
        },
        {
          "value": "medium",
          "label": "Medium"
        },
        {
          "value": "large",
          "label": "Large"
        }
      ],
      "default": "medium"
    },
    {
      "type": "select",
      "id": "gallery_layout",
      "label": "Layout",
      "options": [
        {
          "value": "carousel-beside",
          "label": "Carousel - thumbnails left"
        },
        {
          "value": "carousel-under",
          "label": "Carousel - thumbnails below"
        },
        {
          "value": "columns-1",
          "label": "One column"
        },
        {
          "value": "columns-2",
          "label": "Two column"
        },
        {
          "value": "collage-1",
          "label": "Collage - style 1"
        },
        {
          "value": "collage-2",
          "label": "Collage - style 2"
        }
      ],
      "default": "carousel-under"
    },
    {
      "type": "checkbox",
      "id": "enable_zoom",
      "label": "Enable image zoom",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_alt_text",
      "label": "Show alt text over image",
      "default": false
    },
    {
      "type": "select",
      "id": "alt_text_icon",
      "label": "Alt text icon",
      "default": "",
      "options": [
        {
          "value": "",
          "label": "No icon"
        },
        {
          "value": "award",
          "label": "Award"
        },
        {
          "value": "box",
          "label": "Box"
        },
        {
          "value": "briefcase",
          "label": "Briefcase"
        },
        {
          "value": "calendar",
          "label": "Calendar"
        },
        {
          "value": "chat_bubble",
          "label": "Chat bubble"
        },
        {
          "value": "check_mark",
          "label": "Check mark"
        },
        {
          "value": "check_mark_in_circle",
          "label": "Check mark in circle"
        },
        {
          "value": "clock",
          "label": "Clock"
        },
        {
          "value": "credit_card",
          "label": "Credit card"
        },
        {
          "value": "dollar_sign",
          "label": "Dollar sign"
        },
        {
          "value": "dryer",
          "label": "Dryer"
        },
        {
          "value": "eye",
          "label": "Eye"
        },
        {
          "value": "feather",
          "label": "Feather"
        },
        {
          "value": "gift",
          "label": "Gift"
        },
        {
          "value": "heart",
          "label": "Heart"
        },
        {
          "value": "iron",
          "label": "Iron"
        },
        {
          "value": "leaf",
          "label": "Leaf"
        },
        {
          "value": "leather",
          "label": "Leather"
        },
        {
          "value": "lock",
          "label": "Lock"
        },
        {
          "value": "map_pin",
          "label": "Map pin"
        },
        {
          "value": "pants",
          "label": "Pants"
        },
        {
          "value": "percent",
          "label": "Percent"
        },
        {
          "value": "plane",
          "label": "Plane"
        },
        {
          "value": "price_tag",
          "label": "Price tag"
        },
        {
          "value": "question_mark",
          "label": "Question mark"
        },
        {
          "value": "return",
          "label": "Return"
        },
        {
          "value": "ruler",
          "label": "Ruler"
        },
        {
          "value": "scissors",
          "label": "Scissors"
        },
        {
          "value": "shirt",
          "label": "Shirt"
        },
        {
          "value": "shoe",
          "label": "Shoe"
        },
        {
          "value": "silhouette",
          "label": "Silhouette"
        },
        {
          "value": "star",
          "label": "Star"
        },
        {
          "value": "truck",
          "label": "Truck"
        },
        {
          "value": "washing",
          "label": "Washing"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "enable_video_autoplay",
      "label": "Autoplay videos",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "label": "Enable video looping",
      "default": false
    },
    {
      "type": "header",
      "content": "Media grouping"
    },
    {
      "type": "checkbox",
      "id": "enable_media_grouping",
      "label": "Show media only associated with the selected variant",
      "info": "Other variants' media will be hidden",
      "default": false
    },
    {
      "type": "text",
      "id": "media_grouping_option",
      "label": "Variant option label",
      "info": "The label used to switch between images",
      "default": "Color,Colour,Couleur,Farbe"
    },
    {
      "type": "paragraph",
      "content": "If your store displays multiple languages, include all translations separated by a comma, e.g. Color,Couleur,Farbe"
    },
    {
      "type": "paragraph",
      "content": "Arrange product media by this option (all 'red' media together, then all 'blue' media together, for example). The first media in each group should be assigned to a variant. [Read more](https://cleancanvas.co.uk/support/general/grouped-variant-images)"
    },
    {
      "type": "paragraph",
      "content": "Add the alt text 'all-groups' to show that media in all groups."
    }
  ],
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "product_stock_display",
      "name": "Product Stock Display",
      "settings": [
        {
          "type": "header",
          "content": "Location Names",
          "info": "All Location Names are defined in the theme translations, you can adjust them there as in this example: Location 1, Location 2. You can add a alternative name by using Location 1:Cologne"
        },
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "Image 1"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "Image 2"
        },
        {
          "type": "image_picker",
          "id": "image_3",
          "label": "Image 3"
        },
        {
          "type": "image_picker",
          "id": "image_4",
          "label": "Image 4"
        },
        {
          "type": "image_picker",
          "id": "image_5",
          "label": "Image 5"
        },
        {
          "type": "image_picker",
          "id": "image_6",
          "label": "Image 6"
        }
      ]
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_tax_and_shipping",
          "label": "Show tax status and shipping policy link",
          "default": false
        },
        {
          "type": "checkbox",
          "label": "Show product rating",
          "id": "enable_product_reviews_by_price",
          "info": "Add reviews by installing [an app](https://apps.shopify.com/search?q=reviews). App must support Shopify's standard rating metafield.",
          "default": true
        }
      ]
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_in_tab",
          "label": "Show in tab",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "open_tab",
          "label": "Open tab",
          "default": false
        },
        {
          "type": "select",
          "id": "icon",
          "label": "Icon",
          "default": "",
          "options": [
            {
              "value": "",
              "label": "No icon"
            },
            {
              "value": "award",
              "label": "Award"
            },
            {
              "value": "box",
              "label": "Box"
            },
            {
              "value": "briefcase",
              "label": "Briefcase"
            },
            {
              "value": "calendar",
              "label": "Calendar"
            },
            {
              "value": "chat_bubble",
              "label": "Chat bubble"
            },
            {
              "value": "check_mark",
              "label": "Check mark"
            },
            {
              "value": "check_mark_in_circle",
              "label": "Check mark in circle"
            },
            {
              "value": "clock",
              "label": "Clock"
            },
            {
              "value": "credit_card",
              "label": "Credit card"
            },
            {
              "value": "dollar_sign",
              "label": "Dollar sign"
            },
            {
              "value": "dryer",
              "label": "Dryer"
            },
            {
              "value": "eye",
              "label": "Eye"
            },
            {
              "value": "feather",
              "label": "Feather"
            },
            {
              "value": "gift",
              "label": "Gift"
            },
            {
              "value": "heart",
              "label": "Heart"
            },
            {
              "value": "iron",
              "label": "Iron"
            },
            {
              "value": "leaf",
              "label": "Leaf"
            },
            {
              "value": "leather",
              "label": "Leather"
            },
            {
              "value": "lock",
              "label": "Lock"
            },
            {
              "value": "map_pin",
              "label": "Map pin"
            },
            {
              "value": "pants",
              "label": "Pants"
            },
            {
              "value": "percent",
              "label": "Percent"
            },
            {
              "value": "plane",
              "label": "Plane"
            },
            {
              "value": "price_tag",
              "label": "Price tag"
            },
            {
              "value": "question_mark",
              "label": "Question mark"
            },
            {
              "value": "return",
              "label": "Return"
            },
            {
              "value": "ruler",
              "label": "Ruler"
            },
            {
              "value": "scissors",
              "label": "Scissors"
            },
            {
              "value": "shirt",
              "label": "Shirt"
            },
            {
              "value": "shoe",
              "label": "Shoe"
            },
            {
              "value": "silhouette",
              "label": "Silhouette"
            },
            {
              "value": "star",
              "label": "Star"
            },
            {
              "value": "truck",
              "label": "Truck"
            },
            {
              "value": "washing",
              "label": "Washing"
            }
          ]
        },
        {
          "type": "checkbox",
          "id": "show_in_quickbuy",
          "label": "Show in quick buy",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "show_read_more",
          "label": "Enable Read More",
          "default": false
        }
      ]
    },
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "sku",
      "name": "SKU",
      "limit": 1
    },
    {
      "type": "barcode",
      "name": "Barcode (ISBN, UPC, etc)",
      "limit": 1
    },
    {
      "type": "stock_images",
      "name": "Stock Images",
      "limit": 1
    },
    {
      "type": "variant-picker",
      "name": "Variant picker",
      "settings": [
        {
          "type": "checkbox",
          "id": "show_single",
          "label": "Show for a single variant",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "select_first_variant",
          "label": "Select first available variant",
          "default": true
        },
        {
          "type": "select",
          "id": "selector_style",
          "label": "Variant style",
          "options": [
            {
              "value": "listed",
              "label": "Buttons"
            },
            {
              "value": "dropdown",
              "label": "Dropdown"
            }
          ],
          "default": "listed"
        },
        {
          "type": "checkbox",
          "id": "enable_dynamic_availability",
          "label": "Show availability in selectors",
          "info": "When an option is selected, options below it are updated to show their availability",
          "default": true
        },
        {
          "type": "header",
          "content": "Size chart"
        },
        {
          "type": "checkbox",
          "id": "enable_size_chart",
          "label": "Enable size chart",
          "default": false
        },
        {
          "type": "text",
          "id": "size_chart_variant_selector",
          "label": "Option names Size",
          "info": "Triggers Size Chart Selector",
          "default": "size,grosse,groesse"
        },
        {
          "type": "text",
          "id": "size_chart_variant",
          "label": "Option name",
          "info": "The label to show the link beside",
          "default": "Size"
        },
        {
          "type": "page",
          "id": "size_chart_page",
          "label": "Page containing size chart"
        }
      ],
      "limit": 1
    },
    {
      "type": "variant-picker-spray",
      "name": "Variant picker Spray",
      "limit": 1
    },
    {
      "type": "buy-buttons",
      "name": "Buy buttons",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_quantity_selector",
          "label": "Show quantity selector",
          "default": true
        },
        {
          "type": "select",
          "id": "select_quantity_selector",
          "label": "Select quantity selector",
          "options": [
            { "value": "quantity_standard", "label": "Standard Quantity Selector" },
            { "value": "quantity_advanced", "label": "Advanced Quantity Selector" }
          ],
          "default": "quantity_advanced"
        },
        {
          "type": "checkbox",
          "id": "enable_payment_button",
          "label": "Show dynamic checkout button",
          "info": "Each customer will see their preferred payment method from those available on your store, such as PayPal or Apple Pay. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_backorder_text",
          "label": "Show backorder text",
          "default": false,
          "info": "Only shows for products which use Shopify inventory tracking and are available to purchase when out of stock."
        },
        {
          "type": "checkbox",
          "id": "show_pickup_availability",
          "label": "Show pickup availability",
          "default": true,
          "info": "Show customers where they can pick up the product. [Learn more](https://help.shopify.com/en/manual/shipping/setting-up-and-managing-your-shipping/local-methods/local-pickup)"
        },
        {
          "type": "checkbox",
          "id": "show_gift_card_recipient",
          "default": false,
          "label": "Show recipient information form for gift cards",
          "info": "Allow customers to send gift cards to a recipient along with a personal message. When enabled, the dynamic checkout button will be disabled for gift cards. [Learn more](https://help.shopify.com/manual/online-store/themes/customizing-themes/add-gift-card-recipient-fields)"
        }
      ]
    },
    {
      "type": "inventory-level",
      "name": "Inventory level",
      "settings": [
        {
          "type": "select",
          "id": "show_inventory_notice",
          "label": "Show inventory notice",
          "options": [
            {
              "label": "When inventory low",
              "value": "low"
            },
            {
              "label": "Always",
              "value": "always"
            }
          ],
          "default": "low"
        },
        {
          "type": "select",
          "id": "show_inventory_count",
          "label": "Show count in inventory notice",
          "options": [
            {
              "label": "Never",
              "value": "never"
            },
            {
              "label": "When inventory low",
              "value": "low"
            },
            {
              "label": "Always",
              "value": "always"
            }
          ],
          "default": "low"
        },
        {
          "type": "range",
          "id": "inventory_threshold",
          "min": 1,
          "max": 100,
          "step": 1,
          "label": "Low inventory threshold",
          "default": 10
        },
        {
          "type": "checkbox",
          "id": "enable_box",
          "label": "Enable box style",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "enable_pulse",
          "label": "Enable pulse",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_in_quickbuy",
          "label": "Show in quick buy",
          "default": true
        }
      ]
    },
    {
      "type": "accordion",
      "name": "Collapsible tab",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Collapsible tab"
        },
        {
          "type": "select",
          "id": "icon",
          "label": "Icon",
          "default": "",
          "options": [
            {
              "value": "",
              "label": "No icon"
            },
            {
              "value": "award",
              "label": "Award"
            },
            {
              "value": "box",
              "label": "Box"
            },
            {
              "value": "briefcase",
              "label": "Briefcase"
            },
            {
              "value": "calendar",
              "label": "Calendar"
            },
            {
              "value": "chat_bubble",
              "label": "Chat bubble"
            },
            {
              "value": "check_mark",
              "label": "Check mark"
            },
            {
              "value": "check_mark_in_circle",
              "label": "Check mark in circle"
            },
            {
              "value": "clock",
              "label": "Clock"
            },
            {
              "value": "credit_card",
              "label": "Credit card"
            },
            {
              "value": "dollar_sign",
              "label": "Dollar sign"
            },
            {
              "value": "dryer",
              "label": "Dryer"
            },
            {
              "value": "eye",
              "label": "Eye"
            },
            {
              "value": "feather",
              "label": "Feather"
            },
            {
              "value": "gift",
              "label": "Gift"
            },
            {
              "value": "heart",
              "label": "Heart"
            },
            {
              "value": "iron",
              "label": "Iron"
            },
            {
              "value": "leaf",
              "label": "Leaf"
            },
            {
              "value": "leather",
              "label": "Leather"
            },
            {
              "value": "lock",
              "label": "Lock"
            },
            {
              "value": "map_pin",
              "label": "Map pin"
            },
            {
              "value": "pants",
              "label": "Pants"
            },
            {
              "value": "percent",
              "label": "Percent"
            },
            {
              "value": "plane",
              "label": "Plane"
            },
            {
              "value": "price_tag",
              "label": "Price tag"
            },
            {
              "value": "question_mark",
              "label": "Question mark"
            },
            {
              "value": "return",
              "label": "Return"
            },
            {
              "value": "ruler",
              "label": "Ruler"
            },
            {
              "value": "scissors",
              "label": "Scissors"
            },
            {
              "value": "shirt",
              "label": "Shirt"
            },
            {
              "value": "shoe",
              "label": "Shoe"
            },
            {
              "value": "silhouette",
              "label": "Silhouette"
            },
            {
              "value": "star",
              "label": "Star"
            },
            {
              "value": "truck",
              "label": "Truck"
            },
            {
              "value": "washing",
              "label": "Washing"
            }
          ]
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Tab content",
          "default": "<p>Collapsible tab content</p>"
        },
        {
          "type": "page",
          "id": "page",
          "label": "Tab content from page"
        },
        {
          "type": "checkbox",
          "id": "open",
          "label": "Open",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "show_in_quickbuy",
          "label": "Show in quick buy",
          "default": false
        }
      ]
    },
    {
      "type": "text",
      "name": "Text",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Text block"
        },
        {
          "type": "select",
          "id": "icon",
          "label": "Icon",
          "default": "",
          "options": [
            {
              "value": "",
              "label": "No icon"
            },
            {
              "value": "award",
              "label": "Award"
            },
            {
              "value": "box",
              "label": "Box"
            },
            {
              "value": "briefcase",
              "label": "Briefcase"
            },
            {
              "value": "calendar",
              "label": "Calendar"
            },
            {
              "value": "chat_bubble",
              "label": "Chat bubble"
            },
            {
              "value": "check_mark",
              "label": "Check mark"
            },
            {
              "value": "check_mark_in_circle",
              "label": "Check mark in circle"
            },
            {
              "value": "clock",
              "label": "Clock"
            },
            {
              "value": "credit_card",
              "label": "Credit card"
            },
            {
              "value": "dollar_sign",
              "label": "Dollar sign"
            },
            {
              "value": "dryer",
              "label": "Dryer"
            },
            {
              "value": "eye",
              "label": "Eye"
            },
            {
              "value": "feather",
              "label": "Feather"
            },
            {
              "value": "gift",
              "label": "Gift"
            },
            {
              "value": "heart",
              "label": "Heart"
            },
            {
              "value": "iron",
              "label": "Iron"
            },
            {
              "value": "leaf",
              "label": "Leaf"
            },
            {
              "value": "leather",
              "label": "Leather"
            },
            {
              "value": "lock",
              "label": "Lock"
            },
            {
              "value": "map_pin",
              "label": "Map pin"
            },
            {
              "value": "pants",
              "label": "Pants"
            },
            {
              "value": "percent",
              "label": "Percent"
            },
            {
              "value": "plane",
              "label": "Plane"
            },
            {
              "value": "price_tag",
              "label": "Price tag"
            },
            {
              "value": "question_mark",
              "label": "Question mark"
            },
            {
              "value": "return",
              "label": "Return"
            },
            {
              "value": "ruler",
              "label": "Ruler"
            },
            {
              "value": "scissors",
              "label": "Scissors"
            },
            {
              "value": "shirt",
              "label": "Shirt"
            },
            {
              "value": "shoe",
              "label": "Shoe"
            },
            {
              "value": "silhouette",
              "label": "Silhouette"
            },
            {
              "value": "star",
              "label": "Star"
            },
            {
              "value": "truck",
              "label": "Truck"
            },
            {
              "value": "washing",
              "label": "Washing"
            }
          ]
        },
        {
          "type": "image_picker",
          "id": "custom_icon",
          "label": "Custom icon"
        },
        {
          "type": "select",
          "id": "icon_size",
          "label": "Icon size",
          "default": "small",
          "options": [
            {
              "value": "small",
              "label": "Small"
            },
            {
              "value": "large",
              "label": "Large"
            }
          ]
        },
        {
          "type": "checkbox",
          "id": "enable_box",
          "label": "Enable box style",
          "default": false
        },
        {
          "type": "color",
          "id": "box_color",
          "label": "Box color",
          "info": "Suggestions: Blue #e5f3ff, Teal #e0f5f5, Green #e0f4d5, Yellow #fcf1cd, Red #fbeae5",
          "default": "#e0f4d5"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text color",
          "default": "#000000"
        },
        {
          "type": "checkbox",
          "id": "uppercase",
          "label": "Uppercase",
          "default": false
        },
        {
          "type": "select",
          "id": "font_size",
          "label": "Font size",
          "options": [
            {
              "value": "0.75rem",
              "label": "Small"
            },
            {
              "value": "0.875rem",
              "label": "Medium"
            },
            {
              "value": "1rem",
              "label": "Normal"
            }
          ],
          "default": "1rem"
        },
        {
          "type": "checkbox",
          "id": "show_in_quickbuy",
          "label": "Show in quick buy",
          "default": false
        }
      ]
    },
    {
      "type": "richtext",
      "name": "Rich text",
      "settings": [
        {
          "type": "richtext",
          "id": "richtext",
          "label": "Rich text",
          "default": "<p>Rich text block</p>"
        },
        {
          "type": "select",
          "id": "icon",
          "label": "Icon",
          "default": "",
          "options": [
            {
              "value": "",
              "label": "No icon"
            },
            {
              "value": "award",
              "label": "Award"
            },
            {
              "value": "box",
              "label": "Box"
            },
            {
              "value": "briefcase",
              "label": "Briefcase"
            },
            {
              "value": "calendar",
              "label": "Calendar"
            },
            {
              "value": "chat_bubble",
              "label": "Chat bubble"
            },
            {
              "value": "check_mark",
              "label": "Check mark"
            },
            {
              "value": "check_mark_in_circle",
              "label": "Check mark in circle"
            },
            {
              "value": "clock",
              "label": "Clock"
            },
            {
              "value": "credit_card",
              "label": "Credit card"
            },
            {
              "value": "dollar_sign",
              "label": "Dollar sign"
            },
            {
              "value": "dryer",
              "label": "Dryer"
            },
            {
              "value": "eye",
              "label": "Eye"
            },
            {
              "value": "feather",
              "label": "Feather"
            },
            {
              "value": "gift",
              "label": "Gift"
            },
            {
              "value": "heart",
              "label": "Heart"
            },
            {
              "value": "iron",
              "label": "Iron"
            },
            {
              "value": "leaf",
              "label": "Leaf"
            },
            {
              "value": "leather",
              "label": "Leather"
            },
            {
              "value": "lock",
              "label": "Lock"
            },
            {
              "value": "map_pin",
              "label": "Map pin"
            },
            {
              "value": "pants",
              "label": "Pants"
            },
            {
              "value": "percent",
              "label": "Percent"
            },
            {
              "value": "plane",
              "label": "Plane"
            },
            {
              "value": "price_tag",
              "label": "Price tag"
            },
            {
              "value": "question_mark",
              "label": "Question mark"
            },
            {
              "value": "return",
              "label": "Return"
            },
            {
              "value": "ruler",
              "label": "Ruler"
            },
            {
              "value": "scissors",
              "label": "Scissors"
            },
            {
              "value": "shirt",
              "label": "Shirt"
            },
            {
              "value": "shoe",
              "label": "Shoe"
            },
            {
              "value": "silhouette",
              "label": "Silhouette"
            },
            {
              "value": "star",
              "label": "Star"
            },
            {
              "value": "truck",
              "label": "Truck"
            },
            {
              "value": "washing",
              "label": "Washing"
            }
          ]
        },
        {
          "type": "image_picker",
          "id": "custom_icon",
          "label": "Custom icon"
        },
        {
          "type": "select",
          "id": "icon_size",
          "label": "Icon size",
          "default": "small",
          "options": [
            {
              "value": "small",
              "label": "Small"
            },
            {
              "value": "large",
              "label": "Large"
            }
          ]
        },
        {
          "type": "checkbox",
          "id": "enable_box",
          "label": "Enable box style",
          "default": false
        },
        {
          "type": "color",
          "id": "box_color",
          "label": "Box color",
          "info": "Suggestions: Blue #e5f3ff, Teal #e0f5f5, Green #e0f4d5, Yellow #fcf1cd, Red #fbeae5",
          "default": "#e0f4d5"
        },
        {
          "type": "checkbox",
          "id": "show_in_quickbuy",
          "label": "Show in quick buy",
          "default": false
        }
      ]
    },
    {
      "type": "pop-up",
      "name": "Pop-up",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Link text",
          "default": "Pop-up link text"
        },
        {
          "type": "select",
          "id": "style",
          "label": "Style",
          "default": "primary",
          "options": [
            {
              "label": "Primary",
              "value": "primary"
            },
            {
              "label": "Secondary",
              "value": "secondary"
            },
            {
              "label": "Link",
              "value": "link"
            }
          ]
        },
        {
          "type": "page",
          "id": "page",
          "label": "Page"
        },
        {
          "type": "checkbox",
          "id": "show_in_quickbuy",
          "label": "Show in quick buy",
          "default": false
        }
      ]
    },
    {
      "type": "link",
      "name": "Link",
      "settings": [
        {
          "type": "url",
          "id": "url",
          "label": "Link"
        },
        {
          "type": "checkbox",
          "id": "open_in_new_tab",
          "label": "Open link in new tab",
          "default": false
        },
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Link text"
        },
        {
          "type": "select",
          "id": "style",
          "label": "Style",
          "default": "primary",
          "options": [
            {
              "label": "Primary",
              "value": "primary"
            },
            {
              "label": "Secondary",
              "value": "secondary"
            },
            {
              "label": "Link",
              "value": "link"
            }
          ]
        },
        {
          "type": "checkbox",
          "id": "show_in_quickbuy",
          "label": "Show in quick buy",
          "default": false
        }
      ]
    },
    {
      "type": "image",
      "name": "Image",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "range",
          "id": "image_width",
          "min": 60,
          "max": 700,
          "step": 10,
          "unit": "px",
          "label": "Image width",
          "default": 700
        },
        {
          "type": "url",
          "id": "url",
          "label": "Link"
        },
        {
          "type": "checkbox",
          "id": "open_in_new_tab",
          "label": "Open link in new tab",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "show_in_quickbuy",
          "label": "Show in quick buy",
          "default": false
        }
      ]
    },
    {
      "type": "custom-option",
      "name": "Custom option",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Label",
          "info": "Required",
          "default": "Custom option"
        },
        {
          "type": "select",
          "id": "type",
          "label": "Type",
          "default": "text",
          "options": [
            {
              "label": "Text",
              "value": "text"
            },
            {
              "label": "Long text",
              "value": "textarea"
            },
            {
              "label": "Checkbox",
              "value": "checkbox"
            },
            {
              "label": "Multiple options",
              "value": "multiple"
            }
          ]
        },
        {
          "type": "header",
          "content": "Text"
        },
        {
          "type": "checkbox",
          "id": "text_required",
          "label": "Require text",
          "info": "Only works with 'Add to cart' button",
          "default": false
        },
        {
          "type": "header",
          "content": "Checkbox"
        },
        {
          "type": "text",
          "id": "checkbox_checked_value",
          "label": "Checked value",
          "default": "Yes"
        },
        {
          "type": "text",
          "id": "checkbox_unchecked_value",
          "label": "Unchecked value",
          "default": "No"
        },
        {
          "type": "header",
          "content": "Multiple options"
        },
        {
          "type": "select",
          "id": "multiple_style",
          "label": "Style",
          "default": "dropdown",
          "options": [
            {
              "label": "Dropdown",
              "value": "dropdown"
            },
            {
              "label": "Radio",
              "value": "radio"
            }
          ]
        },
        {
          "type": "textarea",
          "id": "multiple_options",
          "label": "Options",
          "default": "Option 1\nOption 2\nOption 3",
          "info": "One option on each line"
        }
      ]
    },
    {
      "type": "custom-liquid",
      "name": "Custom Liquid",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "Liquid code"
        },
        {
          "type": "checkbox",
          "id": "show_in_quickbuy",
          "label": "Show in quick buy",
          "default": false
        }
      ]
    },
    {
      "type": "related-products",
      "name": "Product list",
      "settings": [
        {
          "type": "paragraph",
          "content": "To use a different list for each product, use a product reference list [metafield](https://help.shopify.com/en/manual/metafields) as a dynamic source."
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "info": "Only shows if products are present",
          "default": "Product list"
        },
        {
          "type": "product_list",
          "id": "product_list",
          "label": "Products"
        }
      ]
    },
    {
      "type": "complementary",
      "name": "Complementary products",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "To select complementary products, add the Search & Discovery app. [Learn more](https://shopify.dev/themes/product-merchandising/recommendations)"
        },
        {
          "type": "text",
          "id": "heading",
          "default": "Pairs well with",
          "label": "Heading"
        },
        {
          "type": "checkbox",
          "id": "enable_carousel",
          "label": "Enable carousel",
          "default": true
        },
        {
          "type": "range",
          "id": "max_products",
          "min": 1,
          "max": 10,
          "step": 1,
          "label": "Maximum products to show",
          "default": 10
        }
      ]
    },
    {
      "type": "feature-rating",
      "name": "Fit / Feature rating",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "Fit"
        },
        {
          "type": "range",
          "id": "segments",
          "min": 4,
          "max": 10,
          "step": 1,
          "label": "Segments",
          "default": 5
        },
        {
          "type": "text",
          "id": "active_segment",
          "label": "Active segment",
          "default": "4"
        },
        {
          "type": "checkbox",
          "id": "fill_segments",
          "label": "Fill segments up to active segment",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_labels",
          "label": "Show labels",
          "info": "Labels will be read by screen readers when hidden.",
          "default": true
        },
        {
          "type": "text",
          "id": "label_left",
          "label": "Left label",
          "default": "Small"
        },
        {
          "type": "text",
          "id": "label_middle",
          "label": "Middle label",
          "info": "Optional",
          "default": "True to size"
        },
        {
          "type": "text",
          "id": "label_right",
          "label": "Right label",
          "default": "Large"
        },
        {
          "type": "checkbox",
          "id": "show_in_quickbuy",
          "label": "Show in quick buy",
          "default": false
        }
      ]
    },
    {
      "type": "countdown",
      "name": "Countdown timer",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "Countdown timer"
        },
        {
          "type": "text",
          "id": "end_date",
          "label": "End date",
          "info": "Required. Format: YYYY-MM-DD."
        },
        {
          "type": "text",
          "id": "end_time",
          "label": "End time (optional)",
          "info": "Format: 17:00 (24 hour clock). Uses the store's timezone."
        },
        {
          "type": "richtext",
          "id": "end_text",
          "label": "End text",
          "info": "This shows when the date and time elapses."
        },
        {
          "type": "checkbox",
          "id": "hide_on_end",
          "label": "Hide the timer when the date and time elapses",
          "default": false
        },
        {
          "type": "color",
          "id": "box_color",
          "label": "Box color",
          "default": "#323232"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text color",
          "default": "#ffffff"
        },
        {
          "type": "select",
          "id": "number_font",
          "label": "Number font",
          "options": [
            {
              "label": "Text font",
              "value": "base"
            },
            {
              "label": "Heading font",
              "value": "heading"
            }
          ],
          "default": "base"
        },
        {
          "type": "select",
          "id": "divider_type",
          "label": "Divider type",
          "default": "colon",
          "options": [
            {
              "value": "colon",
              "label": "Colon"
            },
            {
              "value": "dot",
              "label": "Dot"
            },
            {
              "value": "line",
              "label": "Line"
            },
            {
              "value": "none",
              "label": "None"
            }
          ]
        },
        {
          "type": "checkbox",
          "id": "show_timer_labels",
          "label": "Show labels",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_in_quickbuy",
          "label": "Show in quick buy",
          "default": false
        }
      ]
    },
    {
      "type": "release-countdown",
      "name": "Release countdown timer",
      "settings": [
        {
          "type": "color",
          "id": "box_color",
          "label": "Box color",
          "default": "#323232"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text color",
          "default": "#ffffff"
        },
        {
          "type": "select",
          "id": "number_font",
          "label": "Number font",
          "options": [
            {
              "label": "Text font",
              "value": "base"
            },
            {
              "label": "Heading font",
              "value": "heading"
            }
          ],
          "default": "base"
        },
        {
          "type": "select",
          "id": "divider_type",
          "label": "Divider type",
          "default": "colon",
          "options": [
            {
              "value": "colon",
              "label": "Colon"
            },
            {
              "value": "dot",
              "label": "Dot"
            },
            {
              "value": "line",
              "label": "Line"
            },
            {
              "value": "none",
              "label": "None"
            }
          ]
        },
        {
          "type": "checkbox",
          "id": "show_timer_labels",
          "label": "Show labels",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_in_quickbuy",
          "label": "Show in quick buy",
          "default": false
        }
      ]
    },
    {
      "type": "raffle-submission",
      "name": "Raffle submission",
      "settings": []
    },
    {
      "type": "sharing",
      "name": "Sharing",
      "settings": [
        {
          "type": "checkbox",
          "id": "show_twitter",
          "label": "Show X (formerly Twitter)",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_facebook",
          "label": "Show Facebook",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_pinterest",
          "label": "Show Pinterest",
          "default": true
        }
      ],
      "limit": 1
    },
    {
      "type": "divider",
      "name": "Divider",
      "settings": [
        {
          "type": "checkbox",
          "id": "show_in_quickbuy",
          "label": "Show in quick buy",
          "default": false
        }
      ]
    },
    {
      "type": "product_metafield_details",
      "name": "Product Metafield Details",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "product_details_collapsible_open_by_default",
          "label": "Keep \"Product Details\" collapsible open by default",
          "info": "Only on desktop size",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "material_care_collapsible_open_by_default",
          "label": "Keep \"Material & Care\" collapsible open by default",
          "info": "Only on desktop size",
          "default": false
        },
        {
          "type": "checkbox",
          "id": "fit_collapsible_open_by_default",
          "label": "Keep \"Fit\" collapsible open by default",
          "info": "Only on desktop size",
          "default": false
        },
        {
          "type": "header",
          "content": "Metafields Visibility"
        },
        {
          "type": "checkbox",
          "id": "show_manufacturer_colour",
          "label": "Show Manufacturer Colour",
          "default": false
        },
        {
          "type": "header",
          "content": "Labels"
        },
        {
          "type": "select",
          "id": "label_font_weight",
          "label": "Font Weight",
          "default": "bold",
          "options": [
            { "value": "lighter", "label": "Light" },
            { "value": "normal", "label": "Normal" },
            { "value": "bold", "label": "Bold" }
          ]
        },
        {
          "type": "select",
          "id": "label_text_transform",
          "label": "Text Transform",
          "default": "capitalize",
          "options": [
            { "value": "none", "label": "Normal" },
            { "value": "lowercase", "label": "Lowercase" },
            { "value": "uppercase", "label": "Uppercase" },
            { "value": "capitalize", "label": "Capitalize" }
          ]
        },
        {
          "type": "header",
          "content": "Values"
        },
        {
          "type": "select",
          "id": "value_font_weight",
          "label": "Font Weight",
          "default": "normal",
          "options": [
            { "value": "lighter", "label": "Light" },
            { "value": "normal", "label": "Normal" },
            { "value": "bold", "label": "Bold" }
          ]
        },
        {
          "type": "select",
          "id": "value_text_transform",
          "label": "Text Transform",
          "default": "none",
          "options": [
            { "value": "none", "label": "Normal" },
            { "value": "lowercase", "label": "Lowercase" },
            { "value": "uppercase", "label": "Uppercase" },
            { "value": "capitalize", "label": "Capitalize" }
          ]
        }
      ]
    },
    {
      "type": "manufacturer-color",
      "name": "Filter Color",
      "settings": []
    }
  ]
}
{% endschema %}
